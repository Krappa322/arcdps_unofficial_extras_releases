#include "KeyBindsTranslation.h"

#include "KeyBindHelper.h"

#include <cassert>
#include <sstream>
#include <unordered_map>

using KeyBinds::KeyCode;

namespace
{
struct Translation
{
	using ModifierMap = std::unordered_map<KeyBinds::Modifier, const char*>;
	using KeysMap = std::unordered_map<KeyCode, const char*>;
	using KeyControlsMap = std::unordered_map<KeyBinds::KeyControl, const char*>;

	ModifierMap Modifier;
	KeysMap Keys;
	KeyControlsMap KeyControls;
	const char* Mouse;
	const char* NotSet;
	const char* Unbind;

	Translation(
		const char* pMouse,
		const char* pNotSet,
		const char* pUnbind,
		std::initializer_list<ModifierMap::value_type> pModifier,
		std::initializer_list<KeysMap::value_type> pKeys,
		std::initializer_list<KeyControlsMap::value_type> pKeyControls)
		: Mouse(pMouse)
		, NotSet(pNotSet)
		, Unbind(pUnbind)
		, Modifier(pModifier)
		, Keys(pKeys)
		, KeyControls(pKeyControls) {}
};
}; // anonymous namespace

static const std::unordered_map<Language, Translation> TRANSLATIONS = {
	{
		Language::English, {
			(const char*)u8"Mouse",
			(const char*)u8"(unset)",
			(const char*)u8"Unbind",
			// modifier
			{
				{KeyBinds::Modifier_Ctrl, (const char*)u8"Ctrl"},
				{KeyBinds::Modifier_Alt, (const char*)u8"Alt"},
				{KeyBinds::Modifier_Shift, (const char*)u8"Shift"},
			},
			// keys
			{
				{KeyCode::LeftAlt, (const char*)u8"Left Alt"},
				{KeyCode::LeftCtrl, (const char*)u8"Left Ctrl"},
				{KeyCode::LeftShift, (const char*)u8"Left Shift"},
				{KeyCode::CapsLock, (const char*)u8"Caps Lock"},
				{KeyCode::Escape, (const char*)u8"Escape"},
				{KeyCode::NumLock, (const char*)u8"Num Lock"},
				{KeyCode::Backspace, (const char*)u8"Backspace"},
				{KeyCode::Delete, (const char*)u8"Delete"},
				{KeyCode::Enter, (const char*)u8"Enter"},
				{KeyCode::Space, (const char*)u8"Space"},
				{KeyCode::Tab, (const char*)u8"Tab"},
				{KeyCode::End, (const char*)u8"End"},
				{KeyCode::Home, (const char*)u8"Home"},
				{KeyCode::Insert, (const char*)u8"Insert"},
				{KeyCode::Next, (const char*)u8"Page Down"},
				{KeyCode::Prior, (const char*)u8"Page Up"},
				{KeyCode::ArrowDown, (const char*)u8"Down Arrow"},
				{KeyCode::ArrowLeft, (const char*)u8"Left Arrow"},
				{KeyCode::ArrowRight, (const char*)u8"Right Arrow"},
				{KeyCode::ArrowUp, (const char*)u8"Up Arrow"},
				{KeyCode::F1, (const char*)u8"F1"},
				{KeyCode::F2, (const char*)u8"F2"},
				{KeyCode::F3, (const char*)u8"F3"},
				{KeyCode::F4, (const char*)u8"F4"},
				{KeyCode::F5, (const char*)u8"F5"},
				{KeyCode::F6, (const char*)u8"F6"},
				{KeyCode::F7, (const char*)u8"F7"},
				{KeyCode::F8, (const char*)u8"F8"},
				{KeyCode::F9, (const char*)u8"F9"},
				{KeyCode::F10, (const char*)u8"F10"},
				{KeyCode::F11, (const char*)u8"F11"},
				{KeyCode::F12, (const char*)u8"F12"},
				{KeyCode::F13, (const char*)u8"F13"},
				{KeyCode::F14, (const char*)u8"F14"},
				{KeyCode::F15, (const char*)u8"F15"},
				{KeyCode::F16, (const char*)u8"F16"},
				{KeyCode::F17, (const char*)u8"F17"},
				{KeyCode::F18, (const char*)u8"F18"},
				{KeyCode::F19, (const char*)u8"F19"},
				{KeyCode::F20, (const char*)u8"F20"},
				{KeyCode::F21, (const char*)u8"F21"},
				{KeyCode::F22, (const char*)u8"F22"},
				{KeyCode::F23, (const char*)u8"F23"},
				{KeyCode::F24, (const char*)u8"F24"},
				{KeyCode::F25, (const char*)u8"F25"},
				{KeyCode::F26, (const char*)u8"F26"},
				{KeyCode::F27, (const char*)u8"F27"},
				{KeyCode::F28, (const char*)u8"F28"},
				{KeyCode::F29, (const char*)u8"F29"},
				{KeyCode::F30, (const char*)u8"F30"},
				{KeyCode::F31, (const char*)u8"F31"},
				{KeyCode::F32, (const char*)u8"F32"},
				{KeyCode::F33, (const char*)u8"F33"},
				{KeyCode::F34, (const char*)u8"F34"},
				{KeyCode::F35, (const char*)u8"F35"},
				{KeyCode::PlusNum, (const char*)u8"Add (NUM)"},
				{KeyCode::DecimalNum, (const char*)u8"Decimal (NUM)"},
				{KeyCode::DivideNum, (const char*)u8"Divide (NUM)"},
				{KeyCode::MultiplyNum, (const char*)u8"Multiply (NUM)"},
				{KeyCode::_0_NUM, (const char*)u8"0 (NUM)"},
				{KeyCode::_1_NUM, (const char*)u8"1 (NUM)"},
				{KeyCode::_2_NUM, (const char*)u8"2 (NUM)"},
				{KeyCode::_3_NUM, (const char*)u8"3 (NUM)"},
				{KeyCode::_4_NUM, (const char*)u8"4 (NUM)"},
				{KeyCode::_5_NUM, (const char*)u8"5 (NUM)"},
				{KeyCode::_6_NUM, (const char*)u8"6 (NUM)"},
				{KeyCode::_7_NUM, (const char*)u8"7 (NUM)"},
				{KeyCode::_8_NUM, (const char*)u8"8 (NUM)"},
				{KeyCode::_9_NUM, (const char*)u8"9 (NUM)"},
				{KeyCode::EnterNum, (const char*)u8"Return (NUM)"},
				{KeyCode::MinusNum, (const char*)u8"Subtract (NUM)"},
				{KeyCode::ImeKey1, (const char*)u8"IME Key 1 (on Asian-language keyboards)"},
				{KeyCode::ImeKey2, (const char*)u8"IME Key 2 (on Asian-language keyboards)"},
				{KeyCode::RightAlt, (const char*)u8"Right Alt"},
				{KeyCode::RightCtrl, (const char*)u8"Right Ctrl"},
				{KeyCode::RightShift, (const char*)u8"Right Shift"},
				{KeyCode::Eject, (const char*)u8"Eject"},
				{KeyCode::EqualNum, (const char*)u8"Equal (NUM)"},
				{KeyCode::ClearNum, (const char*)u8"Clear (NUM)"},
				{KeyCode::LeftCmd, (const char*)u8"Left Cmd"},
				{KeyCode::Function, (const char*)u8"Function"},
				{KeyCode::RightCmd, (const char*)u8"Right Cmd"},
				{KeyCode::Scroll, (const char*)u8"Scroll"},
				{KeyCode::Pause, (const char*)u8"Pause"},
				{KeyCode::LeftWin, (const char*)u8"Left Windows"},
				{KeyCode::RightWin, (const char*)u8"Right Windows"},
				{KeyCode::Menu, (const char*)u8"Menu"}
			},
			// keyBinds
			{
				{KeyBinds::KeyControl::Movement_MoveForward, (const char*)u8"Move Forward"},
				{KeyBinds::KeyControl::Movement_MoveBackward, (const char*)u8"Move Backward"},
				{KeyBinds::KeyControl::Movement_StrafeLeft, (const char*)u8"Strafe Left"},
				{KeyBinds::KeyControl::Movement_StrafeRight, (const char*)u8"Strafe Right"},
				{KeyBinds::KeyControl::Movement_TurnLeft, (const char*)u8"Turn Left"},
				{KeyBinds::KeyControl::Movement_TurnRight, (const char*)u8"Turn Right"},
				{KeyBinds::KeyControl::Movement_Dodge, (const char*)u8"Dodge"},
				{KeyBinds::KeyControl::Movement_Autorun, (const char*)u8"Autorun"},
				{KeyBinds::KeyControl::Movement_Walk, (const char*)u8"Walk"},
				{KeyBinds::KeyControl::Movement_Jump, (const char*)u8"Jump"},
				{KeyBinds::KeyControl::Movement_SwimUp, (const char*)u8"Swim Up"},
				{KeyBinds::KeyControl::Movement_SwimDown, (const char*)u8"Swim Down"},
				{KeyBinds::KeyControl::Movement_AboutFace, (const char*)u8"About Face"},
				{KeyBinds::KeyControl::Skills_SwapWeapons, (const char*)u8"Swap Weapons"},
				{KeyBinds::KeyControl::Skills_WeaponSkill1, (const char*)u8"Weapon Skill 1"},
				{KeyBinds::KeyControl::Skills_WeaponSkill2, (const char*)u8"Weapon Skill 2"},
				{KeyBinds::KeyControl::Skills_WeaponSkill3, (const char*)u8"Weapon Skill 3"},
				{KeyBinds::KeyControl::Skills_WeaponSkill4, (const char*)u8"Weapon Skill 4"},
				{KeyBinds::KeyControl::Skills_WeaponSkill5, (const char*)u8"Weapon Skill 5"},
				{KeyBinds::KeyControl::Skills_HealingSkill, (const char*)u8"Healing Skill"},
				{KeyBinds::KeyControl::Skills_UtilitySkill1, (const char*)u8"Utility Skill 1"},
				{KeyBinds::KeyControl::Skills_UtilitySkill2, (const char*)u8"Utility Skill 2"},
				{KeyBinds::KeyControl::Skills_UtilitySkill3, (const char*)u8"Utility Skill 3"},
				{KeyBinds::KeyControl::Skills_EliteSkill, (const char*)u8"Elite Skill"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill1, (const char*)u8"Profession Skill 1"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill2, (const char*)u8"Profession Skill 2"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill3, (const char*)u8"Profession Skill 3"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill4, (const char*)u8"Profession Skill 4"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill5, (const char*)u8"Profession Skill 5"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill6, (const char*)u8"Profession Skill 6"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill7, (const char*)u8"Profession Skill 7"},
				{KeyBinds::KeyControl::Skills_SpecialAction, (const char*)u8"Special Action"},
				{KeyBinds::KeyControl::Targeting_AlertTarget, (const char*)u8"Altert Target"},
				{KeyBinds::KeyControl::Targeting_CallTarget, (const char*)u8"Call Target"},
				{KeyBinds::KeyControl::Targeting_TakeTarget, (const char*)u8"Take Target"},
				{KeyBinds::KeyControl::Targeting_SetPersonalTarget, (const char*)u8"Set Personal Target"},
				{KeyBinds::KeyControl::Targeting_TakePersonalTarget, (const char*)u8"Take Personal Target"},
				{KeyBinds::KeyControl::Targeting_NearestEnemy, (const char*)u8"Nearest Enemy"},
				{KeyBinds::KeyControl::Targeting_NextEnemy, (const char*)u8"Next Enemy"},
				{KeyBinds::KeyControl::Targeting_PreviousEnemy, (const char*)u8"Previous Enemy"},
				{KeyBinds::KeyControl::Targeting_NearestAlly, (const char*)u8"Nearest Ally"},
				{KeyBinds::KeyControl::Targeting_NextAlly, (const char*)u8"Next Ally"},
				{KeyBinds::KeyControl::Targeting_PreviousAlly, (const char*)u8"Previous Ally"},
				{KeyBinds::KeyControl::Targeting_LockAutotarget, (const char*)u8"Lock Autotarget"},
				{KeyBinds::KeyControl::Targeting_SnapGroundTarget, (const char*)u8"Snap Ground Target"},
				{KeyBinds::KeyControl::Targeting_ToggleSnapGroundTarget, (const char*)u8"Toggle Snap Ground Target"},
				{KeyBinds::KeyControl::Targeting_DisableAutotargeting, (const char*)u8"Disable Autotargeting"},
				{KeyBinds::KeyControl::Targeting_ToggleAutotargeting, (const char*)u8"Toggle Autotargeting"},
				{KeyBinds::KeyControl::Targeting_AllyTargetingMode, (const char*)u8"Ally Targeting Mode"},
				{KeyBinds::KeyControl::Targeting_ToggleAllyTargetingMode, (const char*)u8"Toggle Ally Targeting Mode"},
				{KeyBinds::KeyControl::UI_BlackLionTradingDialog, (const char*)u8"Black Lion Trading Dialog"},
				{KeyBinds::KeyControl::UI_ContactsDialog, (const char*)u8"Contacts Dialog"},
				{KeyBinds::KeyControl::UI_GuildDialog, (const char*)u8"Guild Dialog"},
				{KeyBinds::KeyControl::UI_HeroDialog, (const char*)u8"Hero Dialog"},
				{KeyBinds::KeyControl::UI_InventoryDialog, (const char*)u8"Inventory Dialog"},
				{KeyBinds::KeyControl::UI_PetDialog, (const char*)u8"Pet Dialog"},
				{KeyBinds::KeyControl::UI_LogOut, (const char*)u8"Log Out"},
				{KeyBinds::KeyControl::UI_MailDialog, (const char*)u8"Mail Dialog"},
				{KeyBinds::KeyControl::UI_OptionsDialog, (const char*)u8"Options Dialog"},
				{KeyBinds::KeyControl::UI_PartyDialog, (const char*)u8"Party Dialog"},
				{KeyBinds::KeyControl::UI_PvPPanel, (const char*)u8"PvP Panel"},
				{KeyBinds::KeyControl::UI_PvPBuild, (const char*)u8"PvP Build"},
				{KeyBinds::KeyControl::UI_Scoreboard, (const char*)u8"Scoreboard"},
				{KeyBinds::KeyControl::UI_WizardsVaultDialog, (const char*)u8"Wizard's Vault Dialog"},
				{KeyBinds::KeyControl::UI_InformationDialog, (const char*)u8"Information Dialog"},
				{KeyBinds::KeyControl::UI_Show_HideChat, (const char*)u8"Hide/Hide Chat"},
				{KeyBinds::KeyControl::UI_ChatCommand, (const char*)u8"Chat Command"},
				{KeyBinds::KeyControl::UI_ChatMessage, (const char*)u8"Chat Message"},
				{KeyBinds::KeyControl::UI_ChatReply, (const char*)u8"Chat Reply"},
				{KeyBinds::KeyControl::UI_ShowHideUI, (const char*)u8"Show/Hide UI"},
				{KeyBinds::KeyControl::UI_ShowHideSquadBroadcastChat, (const char*)u8"Show/Hide Squad Broadcast Chat"},
				{KeyBinds::KeyControl::UI_SquadBroadcastChatCommand, (const char*)u8"Squad Broadcast Chat Command"},
				{KeyBinds::KeyControl::UI_SquadBroadcastMessage, (const char*)u8"Squad Broadcast Message"},
				{KeyBinds::KeyControl::Camera_FreeCamera, (const char*)u8"Free Camera"},
				{KeyBinds::KeyControl::Camera_ZoomIn, (const char*)u8"Zoom In"},
				{KeyBinds::KeyControl::Camera_ZoomOut, (const char*)u8"Zoom Out"},
				{KeyBinds::KeyControl::Camera_LookBehind, (const char*)u8"Left Behind"},
				{KeyBinds::KeyControl::Camera_ToggleActionCamera, (const char*)u8"Toggle Action Camera"},
				{KeyBinds::KeyControl::Camera_DisableActionCamera, (const char*)u8"Disable Action Camera"},
				{KeyBinds::KeyControl::Screenshot_Normal, (const char*)u8"Normal"},
				{KeyBinds::KeyControl::Screenshot_Stereoscopic, (const char*)u8"Stereoscopic"},
				{KeyBinds::KeyControl::Map_OpenClose, (const char*)u8"Open/Close"},
				{KeyBinds::KeyControl::Map_Recenter, (const char*)u8"Recenter"},
				{KeyBinds::KeyControl::Map_FloorDown, (const char*)u8"Floor Down"},
				{KeyBinds::KeyControl::Map_FloorUp, (const char*)u8"Floor Up"},
				{KeyBinds::KeyControl::Map_ZoomIn, (const char*)u8"Zoom In"},
				{KeyBinds::KeyControl::Map_ZoomOut, (const char*)u8"Zoom Out"},
				{KeyBinds::KeyControl::Mounts_MountDismount, (const char*)u8"Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_MountAbility1, (const char*)u8"Mount Ability 1"},
				{KeyBinds::KeyControl::Mounts_MountAbility2, (const char*)u8"Mount Ability 2"},
				{KeyBinds::KeyControl::Mounts_Raptor, (const char*)u8"Raptor Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_Springer, (const char*)u8"Springer Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_Skimmer, (const char*)u8"Skimmer Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_Jackal, (const char*)u8"Jackal Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_Griffon, (const char*)u8"Griffon Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_RollerBeetle, (const char*)u8"Roller Beetle Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_Warclaw, (const char*)u8"Warclaw Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_Skyscale, (const char*)u8"Skyscale Mount/Dismount"},
				{KeyBinds::KeyControl::Mounts_Turtle, (const char*)u8"Siege Turtle Mount/Dismount"},
				{KeyBinds::KeyControl::Spectators_NearestFixedCamera, (const char*)u8"Nearest Fixed Camera"},
				{KeyBinds::KeyControl::Spectators_NearestPlayer, (const char*)u8"Nearest Player"},
				{KeyBinds::KeyControl::Spectators_RedPlayer1, (const char*)u8"Red Player 1"},
				{KeyBinds::KeyControl::Spectators_RedPlayer2, (const char*)u8"Red Player 2"},
				{KeyBinds::KeyControl::Spectators_RedPlayer3, (const char*)u8"Red Player 3"},
				{KeyBinds::KeyControl::Spectators_RedPlayer4, (const char*)u8"Red Player 4"},
				{KeyBinds::KeyControl::Spectators_RedPlayer5, (const char*)u8"Red Player 5"},
				{KeyBinds::KeyControl::Spectators_BluePlayer1, (const char*)u8"Blue Player 1"},
				{KeyBinds::KeyControl::Spectators_BluePlayer2, (const char*)u8"Blue Player 2"},
				{KeyBinds::KeyControl::Spectators_BluePlayer3, (const char*)u8"Blue Player 3"},
				{KeyBinds::KeyControl::Spectators_BluePlayer4, (const char*)u8"Blue Player 4"},
				{KeyBinds::KeyControl::Spectators_BluePlayer5, (const char*)u8"Blue Player 5"},
				{KeyBinds::KeyControl::Spectators_FreeCamera, (const char*)u8"Free Camera"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBoost, (const char*)u8"Free Camera Boost"},
				{KeyBinds::KeyControl::Spectators_FreeCameraForward, (const char*)u8"Free Camera Forward"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBackward, (const char*)u8"Free Camera Backward"},
				{KeyBinds::KeyControl::Spectators_FreeCameraLeft, (const char*)u8"Free Camera Left"},
				{KeyBinds::KeyControl::Spectators_FreeCameraRight, (const char*)u8"Free Camera Right"},
				{KeyBinds::KeyControl::Spectators_FreeCameraUp, (const char*)u8"Free Camera Up"},
				{KeyBinds::KeyControl::Spectators_FreeCameraDown, (const char*)u8"Free Camera Down"},
				{KeyBinds::KeyControl::Squad_Location_Arrow, (const char*)u8"Arrow"},
				{KeyBinds::KeyControl::Squad_Location_Circle, (const char*)u8"Circle"},
				{KeyBinds::KeyControl::Squad_Location_Heart, (const char*)u8"Heart"},
				{KeyBinds::KeyControl::Squad_Location_Square, (const char*)u8"Square"},
				{KeyBinds::KeyControl::Squad_Location_Star, (const char*)u8"Star"},
				{KeyBinds::KeyControl::Squad_Location_Spiral, (const char*)u8"Spiral"},
				{KeyBinds::KeyControl::Squad_Location_Triangle, (const char*)u8"Triangle"},
				{KeyBinds::KeyControl::Squad_Location_X, (const char*)u8"X"},
				{KeyBinds::KeyControl::Squad_ClearAllLocationMarkers, (const char*)u8"Clear All Location Markers"},
				{KeyBinds::KeyControl::Squad_Object_Arrow, (const char*)u8"Object Arrow"},
				{KeyBinds::KeyControl::Squad_Object_Circle, (const char*)u8"Object Circle"},
				{KeyBinds::KeyControl::Squad_Object_Heart, (const char*)u8"Object Heart"},
				{KeyBinds::KeyControl::Squad_Object_Square, (const char*)u8"Object Square"},
				{KeyBinds::KeyControl::Squad_Object_Star, (const char*)u8"Object Star"},
				{KeyBinds::KeyControl::Squad_Object_Spiral, (const char*)u8"Object Spiral"},
				{KeyBinds::KeyControl::Squad_Object_Triangle, (const char*)u8"Object Triangle"},
				{KeyBinds::KeyControl::Squad_Object_X, (const char*)u8"Object X"},
				{KeyBinds::KeyControl::Squad_ClearAllObjectMarkers, (const char*)u8"Clear All Object Markers"},
				{KeyBinds::KeyControl::MasterySkills_ActivateMasterySkill, (const char*)u8"Activate Mastery Skill"},
				{KeyBinds::KeyControl::MasterySkills_StartFishing, (const char*)u8"Start Fishing"},
				{KeyBinds::KeyControl::MasterySkills_SummonSkiff, (const char*)u8"Summon Skiff"},
				{KeyBinds::KeyControl::MasterySkills_SetJadeBotWaypoint, (const char*)u8"Set Jade Bot Waypoint"},
				{KeyBinds::KeyControl::MasterySkills_ScanForRift, (const char*)u8"Scan for Rift"},
				{KeyBinds::KeyControl::MasterySkills_SkyscaleLeap, (const char*)u8"Skyscale Leap"},
				{KeyBinds::KeyControl::MasterySkills_ConjuredDoorway, (const char*)u8"Conjured Doorway"},
				{KeyBinds::KeyControl::Miscellaneous_AoELoot, (const char*)u8"AoE Loot"},
				{KeyBinds::KeyControl::Miscellaneous_Interact, (const char*)u8"Interact"},
				{KeyBinds::KeyControl::Miscellaneous_ShowEnemyNames, (const char*)u8"Show Enemy Names"},
				{KeyBinds::KeyControl::Miscellaneous_ShowAllyNames, (const char*)u8"Show Ally Names"},
				{KeyBinds::KeyControl::Miscellaneous_StowDrawWeapon, (const char*)u8"Stow/Draw Weapon"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleLanguage, (const char*)u8"Toggle Language"},
				{KeyBinds::KeyControl::Miscellaneous_RangerPetCombatToggle, (const char*)u8"Ranger Pet Combat Toggle"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleFullScreen, (const char*)u8"Toggle Full Screen"},
				{KeyBinds::KeyControl::Miscellaneous_EquipUnequipNovelty, (const char*)u8"Equip/Unequip Novelty"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateChair, (const char*)u8"Activate Chair"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateMusicalInstrument, (const char*)u8"Activate Musical Instrument"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateHeldItem, (const char*)u8"Activate Held Item"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateToy, (const char*)u8"Activate Toy"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateTonic, (const char*)u8"Activate Tonic"},
				{KeyBinds::KeyControl::Miscellaneous_DecorateModeToggle, (const char*)u8"Decorate Mode Toggle"},
				{KeyBinds::KeyControl::Templates_BuildTemplate1, (const char*)u8"Build Template 1"},
				{KeyBinds::KeyControl::Templates_BuildTemplate2, (const char*)u8"Build Template 2"},
				{KeyBinds::KeyControl::Templates_BuildTemplate3, (const char*)u8"Build Template 3"},
				{KeyBinds::KeyControl::Templates_BuildTemplate4, (const char*)u8"Build Template 4"},
				{KeyBinds::KeyControl::Templates_BuildTemplate5, (const char*)u8"Build Template 5"},
				{KeyBinds::KeyControl::Templates_BuildTemplate6, (const char*)u8"Build Template 6"},
				{KeyBinds::KeyControl::Templates_BuildTemplate7, (const char*)u8"Build Template 7"},
				{KeyBinds::KeyControl::Templates_BuildTemplate8, (const char*)u8"Build Template 8"},
				{KeyBinds::KeyControl::Templates_BuildTemplate9, (const char*)u8"Build Template 9"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate1, (const char*)u8"Equipment Template 1"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate2, (const char*)u8"Equipment Template 2"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate3, (const char*)u8"Equipment Template 3"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate4, (const char*)u8"Equipment Template 4"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate5, (const char*)u8"Equipment Template 5"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate6, (const char*)u8"Equipment Template 6"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate7, (const char*)u8"Equipment Template 7"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate8, (const char*)u8"Equipment Template 8"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate9, (const char*)u8"Equipment Template 9"},
			}
		}
	},
	{
		Language::French, {
			(const char*)u8"Souris",
			(const char*)u8"(Non défini)",
			(const char*)u8"Dégrouper",
			// modifier
			{
				{KeyBinds::Modifier_Ctrl, (const char*)u8"Ctrl"},
				{KeyBinds::Modifier_Alt, (const char*)u8"Alt"},
				{KeyBinds::Modifier_Shift, (const char*)u8"Majuscule"},
			},
			// keys
			{
				{KeyCode::LeftAlt, (const char*)u8"Alt gauche"},
				{KeyCode::LeftCtrl, (const char*)u8"Ctrl gauche"},
				{KeyCode::LeftShift, (const char*)u8"Maj gauche"},
				{KeyCode::CapsLock, (const char*)u8"Verrouillage majuscule"},
				{KeyCode::Escape, (const char*)u8"Echappatoire"},
				{KeyCode::NumLock, (const char*)u8"Verr. Num."},
				{KeyCode::Backspace, (const char*)u8"Retour"},
				{KeyCode::Delete, (const char*)u8"Supprimer"},
				{KeyCode::Enter, (const char*)u8"Entrée"},
				{KeyCode::Space, (const char*)u8"Espace"},
				{KeyCode::Tab, (const char*)u8"Tabulation"},
				{KeyCode::End, (const char*)u8"Fin"},
				{KeyCode::Home, (const char*)u8"Origine"},
				{KeyCode::Insert, (const char*)u8"insérer"},
				{KeyCode::Next, (const char*)u8"Page suivante"},
				{KeyCode::Prior, (const char*)u8"Page précédente"},
				{KeyCode::ArrowDown, (const char*)u8"Flèche bas"},
				{KeyCode::ArrowLeft, (const char*)u8"Flèche gauche"},
				{KeyCode::ArrowRight, (const char*)u8"Flèche droite"},
				{KeyCode::ArrowUp, (const char*)u8"Flèche haut"},
				{KeyCode::F1, (const char*)u8"F1"},
				{KeyCode::F2, (const char*)u8"F2"},
				{KeyCode::F3, (const char*)u8"F3"},
				{KeyCode::F4, (const char*)u8"F4"},
				{KeyCode::F5, (const char*)u8"F5"},
				{KeyCode::F6, (const char*)u8"F6"},
				{KeyCode::F7, (const char*)u8"F7"},
				{KeyCode::F8, (const char*)u8"F8"},
				{KeyCode::F9, (const char*)u8"F9"},
				{KeyCode::F10, (const char*)u8"F10"},
				{KeyCode::F11, (const char*)u8"F11"},
				{KeyCode::F12, (const char*)u8"F12"},
				{KeyCode::F13, (const char*)u8"F13"},
				{KeyCode::F14, (const char*)u8"F14"},
				{KeyCode::F15, (const char*)u8"F15"},
				{KeyCode::F16, (const char*)u8"F16"},
				{KeyCode::F17, (const char*)u8"F17"},
				{KeyCode::F18, (const char*)u8"F18"},
				{KeyCode::F19, (const char*)u8"F19"},
				{KeyCode::F20, (const char*)u8"F20"},
				{KeyCode::F21, (const char*)u8"F21"},
				{KeyCode::F22, (const char*)u8"F22"},
				{KeyCode::F23, (const char*)u8"F23"},
				{KeyCode::F24, (const char*)u8"F24"},
				{KeyCode::F25, (const char*)u8"F25"},
				{KeyCode::F26, (const char*)u8"F26"},
				{KeyCode::F27, (const char*)u8"F27"},
				{KeyCode::F28, (const char*)u8"F28"},
				{KeyCode::F29, (const char*)u8"F29"},
				{KeyCode::F30, (const char*)u8"F30"},
				{KeyCode::F31, (const char*)u8"F31"},
				{KeyCode::F32, (const char*)u8"F32"},
				{KeyCode::F33, (const char*)u8"F33"},
				{KeyCode::F34, (const char*)u8"F34"},
				{KeyCode::F35, (const char*)u8"F35"},
				{KeyCode::PlusNum, (const char*)u8"Ajouter (NUM)"},
				{KeyCode::DecimalNum, (const char*)u8"Décimale (NUM)"},
				{KeyCode::DivideNum, (const char*)u8"Diviser (NUM)"},
				{KeyCode::MultiplyNum, (const char*)u8"Multiplier (NUM)"},
				{KeyCode::_0_NUM, (const char*)u8"0 (NUM)"},
				{KeyCode::_1_NUM, (const char*)u8"1 (NUM)"},
				{KeyCode::_2_NUM, (const char*)u8"2 (NUM)"},
				{KeyCode::_3_NUM, (const char*)u8"3 (NUM)"},
				{KeyCode::_4_NUM, (const char*)u8"4 (NUM)"},
				{KeyCode::_5_NUM, (const char*)u8"5 (NUM)"},
				{KeyCode::_6_NUM, (const char*)u8"6 (NUM)"},
				{KeyCode::_7_NUM, (const char*)u8"7 (NUM)"},
				{KeyCode::_8_NUM, (const char*)u8"8 (NUM)"},
				{KeyCode::_9_NUM, (const char*)u8"9 (NUM)"},
				{KeyCode::EnterNum, (const char*)u8"Entrée (NUM)"},
				{KeyCode::MinusNum, (const char*)u8"Soustraire (NUM)"},
				{KeyCode::ImeKey1, (const char*)u8"Touche IME 1 (sur les claviers de langue asiatique)"},
				{KeyCode::ImeKey2, (const char*)u8"Touche IME 2 (sur les claviers de langue asiatique)"},
				{KeyCode::RightAlt, (const char*)u8"Alt droit"},
				{KeyCode::RightCtrl, (const char*)u8"Ctrl droit"},
				{KeyCode::RightShift, (const char*)u8"Maj droit"},
				{KeyCode::Eject, (const char*)u8"Éjection"},
				{KeyCode::EqualNum, (const char*)u8"Égal (NUM)"},
				{KeyCode::ClearNum, (const char*)u8"Effacer (NUM)"},
				{KeyCode::LeftCmd, (const char*)u8"Cmd gaucge"},
				{KeyCode::Function, (const char*)u8"Fonction"},
				{KeyCode::RightCmd, (const char*)u8"Cmd droit"},
				{KeyCode::Scroll, (const char*)u8"Arrêt défil"},
				{KeyCode::Pause, (const char*)u8"Pause"},
				{KeyCode::LeftWin, (const char*)u8"Windows gauche"},
				{KeyCode::RightWin, (const char*)u8"Windows droit"},
				{KeyCode::Menu, (const char*)u8"Menu"}
			},
			// keyBinds
			{
				{KeyBinds::KeyControl::Movement_MoveForward, (const char*)u8"Déplacement avant"},
				{KeyBinds::KeyControl::Movement_MoveBackward, (const char*)u8"Déplacement arrière"},
				{KeyBinds::KeyControl::Movement_StrafeLeft, (const char*)u8"Dépl. latéral gauche"},
				{KeyBinds::KeyControl::Movement_StrafeRight, (const char*)u8"Dépl. latéral droite"},
				{KeyBinds::KeyControl::Movement_TurnLeft, (const char*)u8"Tour vers la gauche"},
				{KeyBinds::KeyControl::Movement_TurnRight, (const char*)u8"Tour vers la droite"},
				{KeyBinds::KeyControl::Movement_Dodge, (const char*)u8"Esquive"},
				{KeyBinds::KeyControl::Movement_Autorun, (const char*)u8"Course automatique"},
				{KeyBinds::KeyControl::Movement_Walk, (const char*)u8"Marche"},
				{KeyBinds::KeyControl::Movement_Jump, (const char*)u8"Saut"},
				{KeyBinds::KeyControl::Movement_SwimUp, (const char*)u8"Nage vers le haut"},
				{KeyBinds::KeyControl::Movement_SwimDown, (const char*)u8"Nage vers le bas"},
				{KeyBinds::KeyControl::Movement_AboutFace, (const char*)u8"Demi-tour"},
				{KeyBinds::KeyControl::Skills_SwapWeapons, (const char*)u8"Changer d'arme"},
				{KeyBinds::KeyControl::Skills_WeaponSkill1, (const char*)u8"Compétence d'arme 1"},
				{KeyBinds::KeyControl::Skills_WeaponSkill2, (const char*)u8"Compétence d'arme 2"},
				{KeyBinds::KeyControl::Skills_WeaponSkill3, (const char*)u8"Compétence d'arme 3"},
				{KeyBinds::KeyControl::Skills_WeaponSkill4, (const char*)u8"Compétence d'arme 4"},
				{KeyBinds::KeyControl::Skills_WeaponSkill5, (const char*)u8"Compétence d'arme 5"},
				{KeyBinds::KeyControl::Skills_HealingSkill, (const char*)u8"Compétence de Guérison"},
				{KeyBinds::KeyControl::Skills_UtilitySkill1, (const char*)u8"Compétence utilitaire 1"},
				{KeyBinds::KeyControl::Skills_UtilitySkill2, (const char*)u8"Compétence utilitaire 2"},
				{KeyBinds::KeyControl::Skills_UtilitySkill3, (const char*)u8"Compétence utilitaire 3"},
				{KeyBinds::KeyControl::Skills_EliteSkill, (const char*)u8"Compétence d'élite"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill1, (const char*)u8"Compétence de profession 1"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill2, (const char*)u8"Compétence de profession 2"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill3, (const char*)u8"Compétence de profession 3"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill4, (const char*)u8"Compétence de profession 4"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill5, (const char*)u8"Compétence de profession 5"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill6, (const char*)u8"Compétence de profession 6"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill7, (const char*)u8"Compétence de profession 7"},
				{KeyBinds::KeyControl::Skills_SpecialAction, (const char*)u8"Action spèciale"},
				{KeyBinds::KeyControl::Targeting_AlertTarget, (const char*)u8"Alterte cible"},
				{KeyBinds::KeyControl::Targeting_CallTarget, (const char*)u8"Désigner cible"},
				{KeyBinds::KeyControl::Targeting_TakeTarget, (const char*)u8"Cible"},
				{KeyBinds::KeyControl::Targeting_SetPersonalTarget, (const char*)u8"Définir la cible personnelle"},
				{KeyBinds::KeyControl::Targeting_TakePersonalTarget, (const char*)u8"Choisir la cible personnelle"},
				{KeyBinds::KeyControl::Targeting_NearestEnemy, (const char*)u8"Ennemi le plus proche"},
				{KeyBinds::KeyControl::Targeting_NextEnemy, (const char*)u8"Ennemi suivant"},
				{KeyBinds::KeyControl::Targeting_PreviousEnemy, (const char*)u8"Ennemi précédent"},
				{KeyBinds::KeyControl::Targeting_NearestAlly, (const char*)u8"Allié le plus priche"},
				{KeyBinds::KeyControl::Targeting_NextAlly, (const char*)u8"Allié suivant"},
				{KeyBinds::KeyControl::Targeting_PreviousAlly, (const char*)u8"Allié précédent"},
				{KeyBinds::KeyControl::Targeting_LockAutotarget, (const char*)u8"Verrouillage de cible auto."},
				{KeyBinds::KeyControl::Targeting_SnapGroundTarget, (const char*)u8"Déplacement du ciblage au sol"},
				{KeyBinds::KeyControl::Targeting_ToggleSnapGroundTarget, (const char*)u8"Activer le déplacement du ciblage au sol"},
				{KeyBinds::KeyControl::Targeting_DisableAutotargeting, (const char*)u8"Désactiver le ciblage automatique"},
				{KeyBinds::KeyControl::Targeting_ToggleAutotargeting, (const char*)u8"Activer le ciblage automatique"},
				{KeyBinds::KeyControl::Targeting_AllyTargetingMode, (const char*)u8"Mode de ciblae d'alliés"},
				{KeyBinds::KeyControl::Targeting_ToggleAllyTargetingMode, (const char*)u8"Activer/Désactiver le mode de ciblage d'alliés"},
				{KeyBinds::KeyControl::UI_BlackLionTradingDialog, (const char*)u8"Comp. comm. du Lion noir"},
				{KeyBinds::KeyControl::UI_ContactsDialog, (const char*)u8"Contacs"},
				{KeyBinds::KeyControl::UI_GuildDialog, (const char*)u8"Guilde"},
				{KeyBinds::KeyControl::UI_HeroDialog, (const char*)u8"Héros"},
				{KeyBinds::KeyControl::UI_InventoryDialog, (const char*)u8"Inventaire"},
				{KeyBinds::KeyControl::UI_PetDialog, (const char*)u8"Familier"},
				{KeyBinds::KeyControl::UI_LogOut, (const char*)u8"Déconnexion"},
				{KeyBinds::KeyControl::UI_MailDialog, (const char*)u8"Courrier"},
				{KeyBinds::KeyControl::UI_OptionsDialog, (const char*)u8"Options"},
				{KeyBinds::KeyControl::UI_PartyDialog, (const char*)u8"Groupe"},
				{KeyBinds::KeyControl::UI_PvPPanel, (const char*)u8"Genêtre JcJ"},
				{KeyBinds::KeyControl::UI_PvPBuild, (const char*)u8"Archétype JcJ"},
				{KeyBinds::KeyControl::UI_Scoreboard, (const char*)u8"Tableau des scores"},
				{KeyBinds::KeyControl::UI_WizardsVaultDialog, (const char*)u8"Fenêtre de la chambre forte du sorcier"},
				{KeyBinds::KeyControl::UI_InformationDialog, (const char*)u8"Informations"},
				{KeyBinds::KeyControl::UI_Show_HideChat, (const char*)u8"Aff./Mas. Discussion"},
				{KeyBinds::KeyControl::UI_ChatCommand, (const char*)u8"Commande de discussion"},
				{KeyBinds::KeyControl::UI_ChatMessage, (const char*)u8"Message"},
				{KeyBinds::KeyControl::UI_ChatReply, (const char*)u8"Réponse"},
				{KeyBinds::KeyControl::UI_ShowHideUI, (const char*)u8"Afficher/Masquer l'UI"},
				{KeyBinds::KeyControl::UI_ShowHideSquadBroadcastChat, (const char*)u8"Afficher/Masquer la discussion d'escouade"},
				{KeyBinds::KeyControl::UI_SquadBroadcastChatCommand, (const char*)u8"Commande de discussion d'escouade"},
				{KeyBinds::KeyControl::UI_SquadBroadcastMessage, (const char*)u8"Message à l'attention de l'escouade"},
				{KeyBinds::KeyControl::Camera_FreeCamera, (const char*)u8"Caméra libre"},
				{KeyBinds::KeyControl::Camera_ZoomIn, (const char*)u8"Zoom avant"},
				{KeyBinds::KeyControl::Camera_ZoomOut, (const char*)u8"Zoom arrière"},
				{KeyBinds::KeyControl::Camera_LookBehind, (const char*)u8"Regarder derrière"},
				{KeyBinds::KeyControl::Camera_ToggleActionCamera, (const char*)u8"Basculer du mode standard au mode action"},
				{KeyBinds::KeyControl::Camera_DisableActionCamera, (const char*)u8"Désactiver le mode action"},
				{KeyBinds::KeyControl::Screenshot_Normal, (const char*)u8"Normale"},
				{KeyBinds::KeyControl::Screenshot_Stereoscopic, (const char*)u8"Stéréoscopique"},
				{KeyBinds::KeyControl::Map_OpenClose, (const char*)u8"Ouvrir/Fermer"},
				{KeyBinds::KeyControl::Map_Recenter, (const char*)u8"Recentrer"},
				{KeyBinds::KeyControl::Map_FloorDown, (const char*)u8"Etage inférieur"},
				{KeyBinds::KeyControl::Map_FloorUp, (const char*)u8"Etage supérieur"},
				{KeyBinds::KeyControl::Map_ZoomIn, (const char*)u8"Zoom avant"},
				{KeyBinds::KeyControl::Map_ZoomOut, (const char*)u8"Zoom arrière"},
				{KeyBinds::KeyControl::Mounts_MountDismount, (const char*)u8"Monter / descrendre"},
				{KeyBinds::KeyControl::Mounts_MountAbility1, (const char*)u8"Capacité de monture 1"},
				{KeyBinds::KeyControl::Mounts_MountAbility2, (const char*)u8"Capacité de monture 2"},
				{KeyBinds::KeyControl::Mounts_Raptor, (const char*)u8"Montar/Descendre de raport"},
				{KeyBinds::KeyControl::Mounts_Springer, (const char*)u8"Montar/Descendre de frappesol"},
				{KeyBinds::KeyControl::Mounts_Skimmer, (const char*)u8"Montar/Descendre de voldécume"},
				{KeyBinds::KeyControl::Mounts_Jackal, (const char*)u8"Montar/Descendre de chacal"},
				{KeyBinds::KeyControl::Mounts_Griffon, (const char*)u8"Montar/Descendre de griffon"},
				{KeyBinds::KeyControl::Mounts_RollerBeetle, (const char*)u8"Montar/Descendre du scaraboule"},
				{KeyBinds::KeyControl::Mounts_Warclaw, (const char*)u8"Montar/Descendre de razziafelis"},
				{KeyBinds::KeyControl::Mounts_Skyscale, (const char*)u8"Montar/Descendre de dracailla"},
				{KeyBinds::KeyControl::Mounts_Turtle, (const char*)u8"Monter/Descendre de tortue de siège"},
				{KeyBinds::KeyControl::Spectators_NearestFixedCamera, (const char*)u8"Caméra fixe à proximité"},
				{KeyBinds::KeyControl::Spectators_NearestPlayer, (const char*)u8"Joueur à proximité"},
				{KeyBinds::KeyControl::Spectators_RedPlayer1, (const char*)u8"Joueur de l'équipe rouge 1"},
				{KeyBinds::KeyControl::Spectators_RedPlayer2, (const char*)u8"Joueur de l'équipe rouge 2"},
				{KeyBinds::KeyControl::Spectators_RedPlayer3, (const char*)u8"Joueur de l'équipe rouge 3"},
				{KeyBinds::KeyControl::Spectators_RedPlayer4, (const char*)u8"Joueur de l'équipe rouge 4"},
				{KeyBinds::KeyControl::Spectators_RedPlayer5, (const char*)u8"Joueur de l'équipe rouge 5"},
				{KeyBinds::KeyControl::Spectators_BluePlayer1, (const char*)u8"Joueur de l'équipe bleue 1"},
				{KeyBinds::KeyControl::Spectators_BluePlayer2, (const char*)u8"Joueur de l'équipe bleue 2"},
				{KeyBinds::KeyControl::Spectators_BluePlayer3, (const char*)u8"Joueur de l'équipe bleue 3"},
				{KeyBinds::KeyControl::Spectators_BluePlayer4, (const char*)u8"Joueur de l'équipe bleue 4"},
				{KeyBinds::KeyControl::Spectators_BluePlayer5, (const char*)u8"Joueur de l'équipe bleue 5"},
				{KeyBinds::KeyControl::Spectators_FreeCamera, (const char*)u8"Caméra libre"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBoost, (const char*)u8"Caméra libre : accélération"},
				{KeyBinds::KeyControl::Spectators_FreeCameraForward, (const char*)u8"Caméra libre : vers l'avant"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBackward, (const char*)u8"Caméra libre : vers l'arriére"},
				{KeyBinds::KeyControl::Spectators_FreeCameraLeft, (const char*)u8"Caméra libre : vers la gauche"},
				{KeyBinds::KeyControl::Spectators_FreeCameraRight, (const char*)u8"Caméra libre : vers droite"},
				{KeyBinds::KeyControl::Spectators_FreeCameraUp, (const char*)u8"Caméra libre : vers le haut"},
				{KeyBinds::KeyControl::Spectators_FreeCameraDown, (const char*)u8"Caméra libre : vers le bas"},
				{KeyBinds::KeyControl::Squad_Location_Arrow, (const char*)u8"Flèche"},
				{KeyBinds::KeyControl::Squad_Location_Circle, (const char*)u8"Cercle"},
				{KeyBinds::KeyControl::Squad_Location_Heart, (const char*)u8"Cœur"},
				{KeyBinds::KeyControl::Squad_Location_Square, (const char*)u8"Carré"},
				{KeyBinds::KeyControl::Squad_Location_Star, (const char*)u8"Étoile"},
				{KeyBinds::KeyControl::Squad_Location_Spiral, (const char*)u8"Spirale"},
				{KeyBinds::KeyControl::Squad_Location_Triangle, (const char*)u8"Triangle"},
				{KeyBinds::KeyControl::Squad_Location_X, (const char*)u8"X"},
				{KeyBinds::KeyControl::Squad_ClearAllLocationMarkers, (const char*)u8"Effacer tous les marqueurs de position"},
				{KeyBinds::KeyControl::Squad_Object_Arrow, (const char*)u8"Objet Flèche"},
				{KeyBinds::KeyControl::Squad_Object_Circle, (const char*)u8"Objet Cercle"},
				{KeyBinds::KeyControl::Squad_Object_Heart, (const char*)u8"Objet Cœur"},
				{KeyBinds::KeyControl::Squad_Object_Square, (const char*)u8"Objet Carré"},
				{KeyBinds::KeyControl::Squad_Object_Star, (const char*)u8"Objet Étoile"},
				{KeyBinds::KeyControl::Squad_Object_Spiral, (const char*)u8"Objet Spirale"},
				{KeyBinds::KeyControl::Squad_Object_Triangle, (const char*)u8"Objet Triangle"},
				{KeyBinds::KeyControl::Squad_Object_X, (const char*)u8"Objet X"},
				{KeyBinds::KeyControl::Squad_ClearAllObjectMarkers, (const char*)u8"Effacer tous les marqueurs d'objet"},
				{KeyBinds::KeyControl::MasterySkills_ActivateMasterySkill, (const char*)u8"Activer la compétence de maîtrise"},
				{KeyBinds::KeyControl::MasterySkills_StartFishing, (const char*)u8"Commencer à pêncher"},
				{KeyBinds::KeyControl::MasterySkills_SummonSkiff, (const char*)u8"Invoquer l'esquif"},
				{KeyBinds::KeyControl::MasterySkills_SetJadeBotWaypoint, (const char*)u8"Définir un point de passage de drone de jade"},
				{KeyBinds::KeyControl::MasterySkills_ScanForRift, (const char*)u8"Recherche de brèche"},
				{KeyBinds::KeyControl::MasterySkills_SkyscaleLeap, (const char*)u8"Bond sur le dracaille"},
				{KeyBinds::KeyControl::MasterySkills_ConjuredDoorway, (const char*)u8"Portail invoqué"},
				{KeyBinds::KeyControl::Miscellaneous_AoELoot, (const char*)u8"Pillar ZE"},
				{KeyBinds::KeyControl::Miscellaneous_Interact, (const char*)u8"Interagir"},
				{KeyBinds::KeyControl::Miscellaneous_ShowEnemyNames, (const char*)u8"Aff. le nom des ennemis"},
				{KeyBinds::KeyControl::Miscellaneous_ShowAllyNames, (const char*)u8"Afficher le nom de alliés"},
				{KeyBinds::KeyControl::Miscellaneous_StowDrawWeapon, (const char*)u8"Reng./Dégain. les armes"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleLanguage, (const char*)u8"Changer la langue"},
				{KeyBinds::KeyControl::Miscellaneous_RangerPetCombatToggle, (const char*)u8"Activer/désactiver le familier de combar"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleFullScreen, (const char*)u8"Activer le mode plein écran"},
				{KeyBinds::KeyControl::Miscellaneous_EquipUnequipNovelty, (const char*)u8"Équiper/Déséquiper la babiole"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateChair, (const char*)u8"Activer le siège"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateMusicalInstrument, (const char*)u8"Activer l'instrument de musique"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateHeldItem, (const char*)u8"Activer l'object tenu en main"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateToy, (const char*)u8"Activer le jouet"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateTonic, (const char*)u8"Activation de tonique"},
				{KeyBinds::KeyControl::Miscellaneous_DecorateModeToggle, (const char*)u8"Mode Décoration oui/non"},
				{KeyBinds::KeyControl::Templates_BuildTemplate1, (const char*)u8"Modéle d'archétype 1"},
				{KeyBinds::KeyControl::Templates_BuildTemplate2, (const char*)u8"Modéle d'archétype 2"},
				{KeyBinds::KeyControl::Templates_BuildTemplate3, (const char*)u8"Modéle d'archétype 3"},
				{KeyBinds::KeyControl::Templates_BuildTemplate4, (const char*)u8"Modéle d'archétype 4"},
				{KeyBinds::KeyControl::Templates_BuildTemplate5, (const char*)u8"Modéle d'archétype 5"},
				{KeyBinds::KeyControl::Templates_BuildTemplate6, (const char*)u8"Modéle d'archétype 6"},
				{KeyBinds::KeyControl::Templates_BuildTemplate7, (const char*)u8"Modéle d'archétype 7"},
				{KeyBinds::KeyControl::Templates_BuildTemplate8, (const char*)u8"Modéle d'archétype 8"},
				{KeyBinds::KeyControl::Templates_BuildTemplate9, (const char*)u8"Modéle d'archétype 9"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate1, (const char*)u8"Modéle d'équipement 1"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate2, (const char*)u8"Modéle d'équipement 2"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate3, (const char*)u8"Modéle d'équipement 3"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate4, (const char*)u8"Modéle d'équipement 4"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate5, (const char*)u8"Modéle d'équipement 5"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate6, (const char*)u8"Modéle d'équipement 6"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate7, (const char*)u8"Modéle d'équipement 7"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate8, (const char*)u8"Modéle d'équipement 8"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate9, (const char*)u8"Modéle d'équipement 9"},
			}
		}
	},
	{
		Language::German, {
			(const char*)u8"Maus",
			(const char*)u8"(Nicht belegt)",
			(const char*)u8"Tastenbelegung aufheben",
			// modifier
			{
				{KeyBinds::Modifier_Ctrl, (const char*)u8"Strg"},
				{KeyBinds::Modifier_Alt, (const char*)u8"Alt"},
				{KeyBinds::Modifier_Shift, (const char*)u8"Umschalttaste"},
			},
			// keys
			{
				{KeyCode::LeftAlt, (const char*)u8"Alt links"},
				{KeyCode::LeftCtrl, (const char*)u8"Strg links"},
				{KeyCode::LeftShift, (const char*)u8"Linke Umschalttaste"},
				{KeyCode::CapsLock, (const char*)u8"Feststelltaste"},
				{KeyCode::Escape, (const char*)u8"Esc"},
				{KeyCode::NumLock, (const char*)u8"Num"},
				{KeyCode::Backspace, (const char*)u8"Rücktaste"},
				{KeyCode::Delete, (const char*)u8"Löschen"},
				{KeyCode::Enter, (const char*)u8"Eingabetaste"},
				{KeyCode::Space, (const char*)u8"Leertaste"},
				{KeyCode::Tab, (const char*)u8"TAB"},
				{KeyCode::End, (const char*)u8"ENDE"},
				{KeyCode::Home, (const char*)u8"POS1"},
				{KeyCode::Insert, (const char*)u8"EINFG"},
				{KeyCode::Next, (const char*)u8"BILD abwärts"},
				{KeyCode::Prior, (const char*)u8"BILD aufwärts"},
				{KeyCode::ArrowDown, (const char*)u8"Pfeiltaste abwärts"},
				{KeyCode::ArrowLeft, (const char*)u8"Pfeiltaste links"},
				{KeyCode::ArrowRight, (const char*)u8"Pfeiltaste rechts"},
				{KeyCode::ArrowUp, (const char*)u8"Pfeiltaste aufwärts"},
				{KeyCode::F1, (const char*)u8"F1"},
				{KeyCode::F2, (const char*)u8"F2"},
				{KeyCode::F3, (const char*)u8"F3"},
				{KeyCode::F4, (const char*)u8"F4"},
				{KeyCode::F5, (const char*)u8"F5"},
				{KeyCode::F6, (const char*)u8"F6"},
				{KeyCode::F7, (const char*)u8"F7"},
				{KeyCode::F8, (const char*)u8"F8"},
				{KeyCode::F9, (const char*)u8"F9"},
				{KeyCode::F10, (const char*)u8"F10"},
				{KeyCode::F11, (const char*)u8"F11"},
				{KeyCode::F12, (const char*)u8"F12"},
				{KeyCode::F13, (const char*)u8"F13"},
				{KeyCode::F14, (const char*)u8"F14"},
				{KeyCode::F15, (const char*)u8"F15"},
				{KeyCode::F16, (const char*)u8"F16"},
				{KeyCode::F17, (const char*)u8"F17"},
				{KeyCode::F18, (const char*)u8"F18"},
				{KeyCode::F19, (const char*)u8"F19"},
				{KeyCode::F20, (const char*)u8"F20"},
				{KeyCode::F21, (const char*)u8"F21"},
				{KeyCode::F22, (const char*)u8"F22"},
				{KeyCode::F23, (const char*)u8"F23"},
				{KeyCode::F24, (const char*)u8"F24"},
				{KeyCode::F25, (const char*)u8"F25"},
				{KeyCode::F26, (const char*)u8"F26"},
				{KeyCode::F27, (const char*)u8"F27"},
				{KeyCode::F28, (const char*)u8"F28"},
				{KeyCode::F29, (const char*)u8"F29"},
				{KeyCode::F30, (const char*)u8"F30"},
				{KeyCode::F31, (const char*)u8"F31"},
				{KeyCode::F32, (const char*)u8"F32"},
				{KeyCode::F33, (const char*)u8"F33"},
				{KeyCode::F34, (const char*)u8"F34"},
				{KeyCode::F35, (const char*)u8"F35"},
				{KeyCode::PlusNum, (const char*)u8"Plus (ZB)"},
				{KeyCode::DecimalNum, (const char*)u8"Komma (ZB)"},
				{KeyCode::DivideNum, (const char*)u8"Geteilt (ZB)"},
				{KeyCode::MultiplyNum, (const char*)u8"Mal (ZB)"},
				{KeyCode::_0_NUM, (const char*)u8"0 (ZB)"},
				{KeyCode::_1_NUM, (const char*)u8"1 (ZB)"},
				{KeyCode::_2_NUM, (const char*)u8"2 (ZB)"},
				{KeyCode::_3_NUM, (const char*)u8"3 (ZB)"},
				{KeyCode::_4_NUM, (const char*)u8"4 (ZB)"},
				{KeyCode::_5_NUM, (const char*)u8"5 (ZB)"},
				{KeyCode::_6_NUM, (const char*)u8"6 (ZB)"},
				{KeyCode::_7_NUM, (const char*)u8"7 (ZB)"},
				{KeyCode::_8_NUM, (const char*)u8"8 (ZB)"},
				{KeyCode::_9_NUM, (const char*)u8"9 (ZB)"},
				{KeyCode::EnterNum, (const char*)u8"ENTER (ZB)"},
				{KeyCode::MinusNum, (const char*)u8"Minus (ZB)"},
				{KeyCode::ImeKey1, (const char*)u8"IME-Taste 1 (auf asiatischen Tastaturen)"},
				{KeyCode::ImeKey2, (const char*)u8"IME-Taste 2 (auf asiatischen Tastaturen)"},
				{KeyCode::RightAlt, (const char*)u8"Alt rects"},
				{KeyCode::RightCtrl, (const char*)u8"Strg rechts"},
				{KeyCode::RightShift, (const char*)u8"Rechte Umschalttaste"},
				{KeyCode::Eject, (const char*)u8"Auswerfen"},
				{KeyCode::EqualNum, (const char*)u8"Ist gleich (ZB)"},
				{KeyCode::ClearNum, (const char*)u8"Entf (ZB)"},
				{KeyCode::LeftCmd, (const char*)u8"Linke Cmd-Taste"},
				{KeyCode::Function, (const char*)u8"Funktion"},
				{KeyCode::RightCmd, (const char*)u8"Rechte Cmd-Taste"},
				{KeyCode::Scroll, (const char*)u8"Bildlauf"},
				{KeyCode::Pause, (const char*)u8"Pause"},
				{KeyCode::LeftWin, (const char*)u8"Linke Windows-Taste"},
				{KeyCode::RightWin, (const char*)u8"Rechte Windows-Taste"},
				{KeyCode::Menu, (const char*)u8"Menü"}
			},
			// keyBinds
			{
				{KeyBinds::KeyControl::Movement_MoveForward, (const char*)u8"Vorwärts bewegen"},
				{KeyBinds::KeyControl::Movement_MoveBackward, (const char*)u8"Rückwärts bewegen"},
				{KeyBinds::KeyControl::Movement_StrafeLeft, (const char*)u8"Nach links bewegen"},
				{KeyBinds::KeyControl::Movement_StrafeRight, (const char*)u8"Nach rechts bewegen"},
				{KeyBinds::KeyControl::Movement_TurnLeft, (const char*)u8"Nach links drehen"},
				{KeyBinds::KeyControl::Movement_TurnRight, (const char*)u8"Nach rechts drehen"},
				{KeyBinds::KeyControl::Movement_Dodge, (const char*)u8"Ausweichen"},
				{KeyBinds::KeyControl::Movement_Autorun, (const char*)u8"Automatisches Rennen"},
				{KeyBinds::KeyControl::Movement_Walk, (const char*)u8"Gehen"},
				{KeyBinds::KeyControl::Movement_Jump, (const char*)u8"Springen"},
				{KeyBinds::KeyControl::Movement_SwimUp, (const char*)u8"Nach oben schwimmen"},
				{KeyBinds::KeyControl::Movement_SwimDown, (const char*)u8"Nach unten schwimmen"},
				{KeyBinds::KeyControl::Movement_AboutFace, (const char*)u8"Kehrtwendung"},
				{KeyBinds::KeyControl::Skills_SwapWeapons, (const char*)u8"Waffen wechseln"},
				{KeyBinds::KeyControl::Skills_WeaponSkill1, (const char*)u8"Waffen-Fertigkeit 1"},
				{KeyBinds::KeyControl::Skills_WeaponSkill2, (const char*)u8"Waffen-Fertigkeit 2"},
				{KeyBinds::KeyControl::Skills_WeaponSkill3, (const char*)u8"Waffen-Fertigkeit 3"},
				{KeyBinds::KeyControl::Skills_WeaponSkill4, (const char*)u8"Waffen-Fertigkeit 4"},
				{KeyBinds::KeyControl::Skills_WeaponSkill5, (const char*)u8"Waffen-Fertigkeit 5"},
				{KeyBinds::KeyControl::Skills_HealingSkill, (const char*)u8"Heilfertigkeit"},
				{KeyBinds::KeyControl::Skills_UtilitySkill1, (const char*)u8"Hilfsfertigkeit 1"},
				{KeyBinds::KeyControl::Skills_UtilitySkill2, (const char*)u8"Hilfsfertigkeit 2"},
				{KeyBinds::KeyControl::Skills_UtilitySkill3, (const char*)u8"Hilfsfertigkeit 3"},
				{KeyBinds::KeyControl::Skills_EliteSkill, (const char*)u8"Elite-Fertigkeit"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill1, (const char*)u8"Klassen-Fertigkeit 1"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill2, (const char*)u8"Klassen-Fertigkeit 2"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill3, (const char*)u8"Klassen-Fertigkeit 3"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill4, (const char*)u8"Klassen-Fertigkeit 4"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill5, (const char*)u8"Klassen-Fertigkeit 5"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill6, (const char*)u8"Klassen-Fertigkeit 6"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill7, (const char*)u8"Klassen-Fertigkeit 7"},
				{KeyBinds::KeyControl::Skills_SpecialAction, (const char*)u8"Besondere Aktion"},
				{KeyBinds::KeyControl::Targeting_AlertTarget, (const char*)u8"Zielalarm"},
				{KeyBinds::KeyControl::Targeting_CallTarget, (const char*)u8"Ziel ausrufen"},
				{KeyBinds::KeyControl::Targeting_TakeTarget, (const char*)u8"Ziel anvisieren"},
				{KeyBinds::KeyControl::Targeting_SetPersonalTarget, (const char*)u8"Persönliches Ziel festlegen"},
				{KeyBinds::KeyControl::Targeting_TakePersonalTarget, (const char*)u8"Persönliches Zeil anvisieren"},
				{KeyBinds::KeyControl::Targeting_NearestEnemy, (const char*)u8"Nächstgelegener Feind"},
				{KeyBinds::KeyControl::Targeting_NextEnemy, (const char*)u8"Nächster Feind"},
				{KeyBinds::KeyControl::Targeting_PreviousEnemy, (const char*)u8"Vorheriger Feind"},
				{KeyBinds::KeyControl::Targeting_NearestAlly, (const char*)u8"Nächstgelegener Verbündeter"},
				{KeyBinds::KeyControl::Targeting_NextAlly, (const char*)u8"Nächster Verbündeter"},
				{KeyBinds::KeyControl::Targeting_PreviousAlly, (const char*)u8"Vorheriger Verbündeter"},
				{KeyBinds::KeyControl::Targeting_LockAutotarget, (const char*)u8"Automatisches Ziel feststellen"},
				{KeyBinds::KeyControl::Targeting_SnapGroundTarget, (const char*)u8"Bodenziel binden"},
				{KeyBinds::KeyControl::Targeting_ToggleSnapGroundTarget, (const char*)u8"Bodenziel binden umschalten"},
				{KeyBinds::KeyControl::Targeting_DisableAutotargeting, (const char*)u8"Automatisches Zielen deaktivieren"},
				{KeyBinds::KeyControl::Targeting_ToggleAutotargeting, (const char*)u8"Automatisches Zielen umschalten"},
				{KeyBinds::KeyControl::Targeting_AllyTargetingMode, (const char*)u8"\"Verbündete anvisieren\"-Modus"},
				{KeyBinds::KeyControl::Targeting_ToggleAllyTargetingMode, (const char*)u8"Modus \"Verbündete anvisieren\" ein-/ausschalten"},
				{KeyBinds::KeyControl::UI_BlackLionTradingDialog, (const char*)u8"Schwarzlöwen-Handelsfenster"},
				{KeyBinds::KeyControl::UI_ContactsDialog, (const char*)u8"Kontagtedialog"},
				{KeyBinds::KeyControl::UI_GuildDialog, (const char*)u8"Gilden-Dialog"},
				{KeyBinds::KeyControl::UI_HeroDialog, (const char*)u8"Heldendialog"},
				{KeyBinds::KeyControl::UI_InventoryDialog, (const char*)u8"Inventardialog"},
				{KeyBinds::KeyControl::UI_PetDialog, (const char*)u8"Tiergefährtendialog"},
				{KeyBinds::KeyControl::UI_LogOut, (const char*)u8"Ausloggen"},
				{KeyBinds::KeyControl::UI_MailDialog, (const char*)u8"Postdialog"},
				{KeyBinds::KeyControl::UI_OptionsDialog, (const char*)u8"Optionsdialog"},
				{KeyBinds::KeyControl::UI_PartyDialog, (const char*)u8"Gruppendialog"},
				{KeyBinds::KeyControl::UI_PvPPanel, (const char*)u8"PvP-Ansicht"},
				{KeyBinds::KeyControl::UI_PvPBuild, (const char*)u8"PvP-Build"},
				{KeyBinds::KeyControl::UI_Scoreboard, (const char*)u8"Punktetabelle"},
				{KeyBinds::KeyControl::UI_WizardsVaultDialog, (const char*)u8"Dialog zum Gewölbe des Zauberers"},
				{KeyBinds::KeyControl::UI_InformationDialog, (const char*)u8"Infodialog"},
				{KeyBinds::KeyControl::UI_Show_HideChat, (const char*)u8"Chatbox anzeigen/ausblenden"},
				{KeyBinds::KeyControl::UI_ChatCommand, (const char*)u8"Chatbefehl"},
				{KeyBinds::KeyControl::UI_ChatMessage, (const char*)u8"Chatnachricht"},
				{KeyBinds::KeyControl::UI_ChatReply, (const char*)u8"Chatantwort"},
				{KeyBinds::KeyControl::UI_ShowHideUI, (const char*)u8"UI anzeigen/ausblenden"},
				{KeyBinds::KeyControl::UI_ShowHideSquadBroadcastChat, (const char*)u8"Einsatztrup-Mitteilungen ein/aus"},
				{KeyBinds::KeyControl::UI_SquadBroadcastChatCommand, (const char*)u8"Chatbefehl für Einsatztrupp-Mitteilung"},
				{KeyBinds::KeyControl::UI_SquadBroadcastMessage, (const char*)u8"Einsatztrupp-Mitteilung"},
				{KeyBinds::KeyControl::Camera_FreeCamera, (const char*)u8"Freie Kamera"},
				{KeyBinds::KeyControl::Camera_ZoomIn, (const char*)u8"Heranzoomen"},
				{KeyBinds::KeyControl::Camera_ZoomOut, (const char*)u8"Herauszoomen"},
				{KeyBinds::KeyControl::Camera_LookBehind, (const char*)u8"Hach hinten sehen"},
				{KeyBinds::KeyControl::Camera_ToggleActionCamera, (const char*)u8"Action-Cam dauerhaft umschalten"},
				{KeyBinds::KeyControl::Camera_DisableActionCamera, (const char*)u8"Action-Cam vrübergehend umschalten"},
				{KeyBinds::KeyControl::Screenshot_Normal, (const char*)u8"Normal"},
				{KeyBinds::KeyControl::Screenshot_Stereoscopic, (const char*)u8"3D"},
				{KeyBinds::KeyControl::Map_OpenClose, (const char*)u8"Öffnen/Schließen"},
				{KeyBinds::KeyControl::Map_Recenter, (const char*)u8"Neu zentrieren"},
				{KeyBinds::KeyControl::Map_FloorDown, (const char*)u8"Ebene nach unten"},
				{KeyBinds::KeyControl::Map_FloorUp, (const char*)u8"Ebene nach oben"},
				{KeyBinds::KeyControl::Map_ZoomIn, (const char*)u8"Heranzoomen"},
				{KeyBinds::KeyControl::Map_ZoomOut, (const char*)u8"Herauszoomen"},
				{KeyBinds::KeyControl::Mounts_MountDismount, (const char*)u8"Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_MountAbility1, (const char*)u8"Reit-Fähigkeit 1"},
				{KeyBinds::KeyControl::Mounts_MountAbility2, (const char*)u8"Reit-Fähigkeit 2"},
				{KeyBinds::KeyControl::Mounts_Raptor, (const char*)u8"Raptor: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_Springer, (const char*)u8"Springer: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_Skimmer, (const char*)u8"Schweberochen: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_Jackal, (const char*)u8"Schakal: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_Griffon, (const char*)u8"Greif: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_RollerBeetle, (const char*)u8"Rollkäfer: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_Warclaw, (const char*)u8"Kriegsklaue: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_Skyscale, (const char*)u8"Himmelsschuppe: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Mounts_Turtle, (const char*)u8"Belagerungsschildkröte: Auf-/Absteigen"},
				{KeyBinds::KeyControl::Spectators_NearestFixedCamera, (const char*)u8"Nächste fest montierte Kamera"},
				{KeyBinds::KeyControl::Spectators_NearestPlayer, (const char*)u8"Nächster Spieler"},
				{KeyBinds::KeyControl::Spectators_RedPlayer1, (const char*)u8"Roter Spieler 1"},
				{KeyBinds::KeyControl::Spectators_RedPlayer2, (const char*)u8"Roter Spieler 2"},
				{KeyBinds::KeyControl::Spectators_RedPlayer3, (const char*)u8"Roter Spieler 3"},
				{KeyBinds::KeyControl::Spectators_RedPlayer4, (const char*)u8"Roter Spieler 4"},
				{KeyBinds::KeyControl::Spectators_RedPlayer5, (const char*)u8"Roter Spieler 5"},
				{KeyBinds::KeyControl::Spectators_BluePlayer1, (const char*)u8"Blauer Spieler 1"},
				{KeyBinds::KeyControl::Spectators_BluePlayer2, (const char*)u8"Blauer Spieler 2"},
				{KeyBinds::KeyControl::Spectators_BluePlayer3, (const char*)u8"Blauer Spieler 3"},
				{KeyBinds::KeyControl::Spectators_BluePlayer4, (const char*)u8"Blauer Spieler 4"},
				{KeyBinds::KeyControl::Spectators_BluePlayer5, (const char*)u8"Blauer Spieler 5"},
				{KeyBinds::KeyControl::Spectators_FreeCamera, (const char*)u8"Freie Kamera"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBoost, (const char*)u8"Freie Kamera - Schub"},
				{KeyBinds::KeyControl::Spectators_FreeCameraForward, (const char*)u8"Freie Kamera - Vorwärts"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBackward, (const char*)u8"Freie Kamera - Rückwärts"},
				{KeyBinds::KeyControl::Spectators_FreeCameraLeft, (const char*)u8"Freie Kamera - Nach links"},
				{KeyBinds::KeyControl::Spectators_FreeCameraRight, (const char*)u8"Freie Kamera - Nach rechts"},
				{KeyBinds::KeyControl::Spectators_FreeCameraUp, (const char*)u8"Freie Kamera - Nach oben"},
				{KeyBinds::KeyControl::Spectators_FreeCameraDown, (const char*)u8"Freie Kamera - Nach unten"},
				{KeyBinds::KeyControl::Squad_Location_Arrow, (const char*)u8"Pfeil"},
				{KeyBinds::KeyControl::Squad_Location_Circle, (const char*)u8"Kreis"},
				{KeyBinds::KeyControl::Squad_Location_Heart, (const char*)u8"Herz"},
				{KeyBinds::KeyControl::Squad_Location_Square, (const char*)u8"Viereck"},
				{KeyBinds::KeyControl::Squad_Location_Star, (const char*)u8"Stern"},
				{KeyBinds::KeyControl::Squad_Location_Spiral, (const char*)u8"Spirale"},
				{KeyBinds::KeyControl::Squad_Location_Triangle, (const char*)u8"Freieck"},
				{KeyBinds::KeyControl::Squad_Location_X, (const char*)u8"X"},
				{KeyBinds::KeyControl::Squad_ClearAllLocationMarkers, (const char*)u8"Alle Ortsmarkierungen entfernen"},
				{KeyBinds::KeyControl::Squad_Object_Arrow, (const char*)u8"Objekt Pfeil"},
				{KeyBinds::KeyControl::Squad_Object_Circle, (const char*)u8"Objekt Kreis"},
				{KeyBinds::KeyControl::Squad_Object_Heart, (const char*)u8"Objekt Herz"},
				{KeyBinds::KeyControl::Squad_Object_Square, (const char*)u8"Objekt Viereck"},
				{KeyBinds::KeyControl::Squad_Object_Star, (const char*)u8"Objekt Stern"},
				{KeyBinds::KeyControl::Squad_Object_Spiral, (const char*)u8"Objekt Spirale"},
				{KeyBinds::KeyControl::Squad_Object_Triangle, (const char*)u8"Objekt Dreieck"},
				{KeyBinds::KeyControl::Squad_Object_X, (const char*)u8"Objekt X"},
				{KeyBinds::KeyControl::Squad_ClearAllObjectMarkers, (const char*)u8"Alle Objektmarkierungen entfernen"},
				{KeyBinds::KeyControl::MasterySkills_ActivateMasterySkill, (const char*)u8"Beherrschungsfertigkeit aktivieren"},
				{KeyBinds::KeyControl::MasterySkills_StartFishing, (const char*)u8"Mit dem Angeln beginnen"},
				{KeyBinds::KeyControl::MasterySkills_SummonSkiff, (const char*)u8"Skiff herbeirufen"},
				{KeyBinds::KeyControl::MasterySkills_SetJadeBotWaypoint, (const char*)u8"Jade-Bot-Wegmarke setzen"},
				{KeyBinds::KeyControl::MasterySkills_ScanForRift, (const char*)u8"Nach Riss suchen"},
				{KeyBinds::KeyControl::MasterySkills_SkyscaleLeap, (const char*)u8"Himmelsschuppen-Sprung"},
				{KeyBinds::KeyControl::MasterySkills_ConjuredDoorway, (const char*)u8"Herbeigerufener Durchgang"},
				{KeyBinds::KeyControl::Miscellaneous_AoELoot, (const char*)u8"Plündern im Wirkungsbereich"},
				{KeyBinds::KeyControl::Miscellaneous_Interact, (const char*)u8"Interagieren"},
				{KeyBinds::KeyControl::Miscellaneous_ShowEnemyNames, (const char*)u8"Namen von Feinden anzeigen"},
				{KeyBinds::KeyControl::Miscellaneous_ShowAllyNames, (const char*)u8"Namen von Verbündeten anzeigen"},
				{KeyBinds::KeyControl::Miscellaneous_StowDrawWeapon, (const char*)u8"Waffen ziehen/verstauen"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleLanguage, (const char*)u8"Sprache wechseln"},
				{KeyBinds::KeyControl::Miscellaneous_RangerPetCombatToggle, (const char*)u8"Tiergefährten-Kampfmodus umschalten"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleFullScreen, (const char*)u8"Auf Vollbild umschalten"},
				{KeyBinds::KeyControl::Miscellaneous_EquipUnequipNovelty, (const char*)u8"Extra ausrüsten/ablegen"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateChair, (const char*)u8"Stuhl aktivieren"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateMusicalInstrument, (const char*)u8"Musikinstrument aktivieren"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateHeldItem, (const char*)u8"Getragenen Gegenstand aktivieren"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateToy, (const char*)u8"Spielzeug aktivieren"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateTonic, (const char*)u8"Trank aktivieren"},
				{KeyBinds::KeyControl::Miscellaneous_DecorateModeToggle, (const char*)u8"Dekorationsmodus umschalten"},
				{KeyBinds::KeyControl::Templates_BuildTemplate1, (const char*)u8"Build-Vorlage 1"},
				{KeyBinds::KeyControl::Templates_BuildTemplate2, (const char*)u8"Build-Vorlage 2"},
				{KeyBinds::KeyControl::Templates_BuildTemplate3, (const char*)u8"Build-Vorlage 3"},
				{KeyBinds::KeyControl::Templates_BuildTemplate4, (const char*)u8"Build-Vorlage 4"},
				{KeyBinds::KeyControl::Templates_BuildTemplate5, (const char*)u8"Build-Vorlage 5"},
				{KeyBinds::KeyControl::Templates_BuildTemplate6, (const char*)u8"Build-Vorlage 6"},
				{KeyBinds::KeyControl::Templates_BuildTemplate7, (const char*)u8"Build-Vorlage 7"},
				{KeyBinds::KeyControl::Templates_BuildTemplate8, (const char*)u8"Build-Vorlage 8"},
				{KeyBinds::KeyControl::Templates_BuildTemplate9, (const char*)u8"Build-Vorlage 9"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate1, (const char*)u8"Ausrüstungs-Vorlage 1"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate2, (const char*)u8"Ausrüstungs-Vorlage 2"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate3, (const char*)u8"Ausrüstungs-Vorlage 3"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate4, (const char*)u8"Ausrüstungs-Vorlage 4"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate5, (const char*)u8"Ausrüstungs-Vorlage 5"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate6, (const char*)u8"Ausrüstungs-Vorlage 6"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate7, (const char*)u8"Ausrüstungs-Vorlage 7"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate8, (const char*)u8"Ausrüstungs-Vorlage 8"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate9, (const char*)u8"Ausrüstungs-Vorlage 9"},
			}
		}
	},
	{
		Language::Spanish, {
			(const char*)u8"Ratón",
			(const char*)u8"(No configurado)",
			(const char*)u8"Desvincular",
			// modifier
			{
				{KeyBinds::Modifier_Ctrl, (const char*)u8"Ctrl"},
				{KeyBinds::Modifier_Alt, (const char*)u8"Alt"},
				{KeyBinds::Modifier_Shift, (const char*)u8"Mayús"},
			},
			// keys
			{
				{KeyCode::LeftAlt, (const char*)u8"Alt izquierdo"},
				{KeyCode::LeftCtrl, (const char*)u8"Ctrl izquierdo"},
				{KeyCode::LeftShift, (const char*)u8"Mayús izquierdo"},
				{KeyCode::CapsLock, (const char*)u8"Bloq Mayús"},
				{KeyCode::Escape, (const char*)u8"Esc"},
				{KeyCode::NumLock, (const char*)u8"Bloq Núm"},
				{KeyCode::Backspace, (const char*)u8"Retroceso"},
				{KeyCode::Delete, (const char*)u8"Eliminar"},
				{KeyCode::Enter, (const char*)u8"Intro"},
				{KeyCode::Space, (const char*)u8"Barra espaciadora"},
				{KeyCode::Tab, (const char*)u8"Tab"},
				{KeyCode::End, (const char*)u8"Fin"},
				{KeyCode::Home, (const char*)u8"Hogar"},
				{KeyCode::Insert, (const char*)u8"Insertar"},
				{KeyCode::Next, (const char*)u8"Av Pág"},
				{KeyCode::Prior, (const char*)u8"Re Pág"},
				{KeyCode::ArrowDown, (const char*)u8"Flecha abajo"},
				{KeyCode::ArrowLeft, (const char*)u8"Flecha izquierda"},
				{KeyCode::ArrowRight, (const char*)u8"Flecha derecha"},
				{KeyCode::ArrowUp, (const char*)u8"Flecha arriba"},
				{KeyCode::F1, (const char*)u8"F1"},
				{KeyCode::F2, (const char*)u8"F2"},
				{KeyCode::F3, (const char*)u8"F3"},
				{KeyCode::F4, (const char*)u8"F4"},
				{KeyCode::F5, (const char*)u8"F5"},
				{KeyCode::F6, (const char*)u8"F6"},
				{KeyCode::F7, (const char*)u8"F7"},
				{KeyCode::F8, (const char*)u8"F8"},
				{KeyCode::F9, (const char*)u8"F9"},
				{KeyCode::F10, (const char*)u8"F10"},
				{KeyCode::F11, (const char*)u8"F11"},
				{KeyCode::F12, (const char*)u8"F12"},
				{KeyCode::F13, (const char*)u8"F13"},
				{KeyCode::F14, (const char*)u8"F14"},
				{KeyCode::F15, (const char*)u8"F15"},
				{KeyCode::F16, (const char*)u8"F16"},
				{KeyCode::F17, (const char*)u8"F17"},
				{KeyCode::F18, (const char*)u8"F18"},
				{KeyCode::F19, (const char*)u8"F19"},
				{KeyCode::F20, (const char*)u8"F20"},
				{KeyCode::F21, (const char*)u8"F21"},
				{KeyCode::F22, (const char*)u8"F22"},
				{KeyCode::F23, (const char*)u8"F23"},
				{KeyCode::F24, (const char*)u8"F24"},
				{KeyCode::F25, (const char*)u8"F25"},
				{KeyCode::F26, (const char*)u8"F26"},
				{KeyCode::F27, (const char*)u8"F27"},
				{KeyCode::F28, (const char*)u8"F28"},
				{KeyCode::F29, (const char*)u8"F29"},
				{KeyCode::F30, (const char*)u8"F30"},
				{KeyCode::F31, (const char*)u8"F31"},
				{KeyCode::F32, (const char*)u8"F32"},
				{KeyCode::F33, (const char*)u8"F33"},
				{KeyCode::F34, (const char*)u8"F34"},
				{KeyCode::F35, (const char*)u8"F35"},
				{KeyCode::PlusNum, (const char*)u8"Suma (NUM)"},
				{KeyCode::DecimalNum, (const char*)u8"Decimal (NUM)"},
				{KeyCode::DivideNum, (const char*)u8"Dividir (NUM)"},
				{KeyCode::MultiplyNum, (const char*)u8"Multiplicación (NUM)"},
				{KeyCode::_0_NUM, (const char*)u8"0 (NUM)"},
				{KeyCode::_1_NUM, (const char*)u8"1 (NUM)"},
				{KeyCode::_2_NUM, (const char*)u8"2 (NUM)"},
				{KeyCode::_3_NUM, (const char*)u8"3 (NUM)"},
				{KeyCode::_4_NUM, (const char*)u8"4 (NUM)"},
				{KeyCode::_5_NUM, (const char*)u8"5 (NUM)"},
				{KeyCode::_6_NUM, (const char*)u8"6 (NUM)"},
				{KeyCode::_7_NUM, (const char*)u8"7 (NUM)"},
				{KeyCode::_8_NUM, (const char*)u8"8 (NUM)"},
				{KeyCode::_9_NUM, (const char*)u8"9 (NUM)"},
				{KeyCode::EnterNum, (const char*)u8"Intro (NUM)"},
				{KeyCode::MinusNum, (const char*)u8"Resta (NUM)"},
				{KeyCode::ImeKey1, (const char*)u8"Tecla IME 1 (en teclados asiáticos)"},
				{KeyCode::ImeKey2, (const char*)u8"Tecla IME 2 (en teclados asiáticos)"},
				{KeyCode::RightAlt, (const char*)u8"Alt derechno"},
				{KeyCode::RightCtrl, (const char*)u8"Ctrl derechno"},
				{KeyCode::RightShift, (const char*)u8"Mayús derechno"},
				{KeyCode::Eject, (const char*)u8"Eyectar"},
				{KeyCode::EqualNum, (const char*)u8"Igual (NUM)"},
				{KeyCode::ClearNum, (const char*)u8"Suprimir (NUM)"},
				{KeyCode::LeftCmd, (const char*)u8"Cmd izquierdo"},
				{KeyCode::Function, (const char*)u8"Función"},
				{KeyCode::RightCmd, (const char*)u8"Cmd derechno"},
				{KeyCode::Scroll, (const char*)u8"Bloq"},
				{KeyCode::Pause, (const char*)u8"Pausa"},
				{KeyCode::LeftWin, (const char*)u8"Windows derechno"},
				{KeyCode::RightWin, (const char*)u8"Windows izquierdo"},
				{KeyCode::Menu, (const char*)u8"Menú"}
			},
			// keyBinds
			{
				{KeyBinds::KeyControl::Movement_MoveForward, (const char*)u8"Avanzar"},
				{KeyBinds::KeyControl::Movement_MoveBackward, (const char*)u8"Retroceder"},
				{KeyBinds::KeyControl::Movement_StrafeLeft, (const char*)u8"Ir a la izquierda"},
				{KeyBinds::KeyControl::Movement_StrafeRight, (const char*)u8"Ir a la derecha"},
				{KeyBinds::KeyControl::Movement_TurnLeft, (const char*)u8"Giro a la izquierda"},
				{KeyBinds::KeyControl::Movement_TurnRight, (const char*)u8"Giro a la derecha"},
				{KeyBinds::KeyControl::Movement_Dodge, (const char*)u8"Esquivar"},
				{KeyBinds::KeyControl::Movement_Autorun, (const char*)u8"Carrera automática"},
				{KeyBinds::KeyControl::Movement_Walk, (const char*)u8"Caminar"},
				{KeyBinds::KeyControl::Movement_Jump, (const char*)u8"Saltar"},
				{KeyBinds::KeyControl::Movement_SwimUp, (const char*)u8"Nada hacia arriba"},
				{KeyBinds::KeyControl::Movement_SwimDown, (const char*)u8"Nada hacia abajo"},
				{KeyBinds::KeyControl::Movement_AboutFace, (const char*)u8"Media vuelta"},
				{KeyBinds::KeyControl::Skills_SwapWeapons, (const char*)u8"Cambiar de armas"},
				{KeyBinds::KeyControl::Skills_WeaponSkill1, (const char*)u8"Habilidad de arma 1"},
				{KeyBinds::KeyControl::Skills_WeaponSkill2, (const char*)u8"Habilidad de arma 2"},
				{KeyBinds::KeyControl::Skills_WeaponSkill3, (const char*)u8"Habilidad de arma 3"},
				{KeyBinds::KeyControl::Skills_WeaponSkill4, (const char*)u8"Habilidad de arma 4"},
				{KeyBinds::KeyControl::Skills_WeaponSkill5, (const char*)u8"Habilidad de arma 5"},
				{KeyBinds::KeyControl::Skills_HealingSkill, (const char*)u8"Habilidad de curación"},
				{KeyBinds::KeyControl::Skills_UtilitySkill1, (const char*)u8"Habilidad de apoyo 1"},
				{KeyBinds::KeyControl::Skills_UtilitySkill2, (const char*)u8"Habilidad de apoyo 2"},
				{KeyBinds::KeyControl::Skills_UtilitySkill3, (const char*)u8"Habilidad de apoyo 3"},
				{KeyBinds::KeyControl::Skills_EliteSkill, (const char*)u8"Habilidad de élite"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill1, (const char*)u8"Habilidad de profesión 1"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill2, (const char*)u8"Habilidad de profesión 2"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill3, (const char*)u8"Habilidad de profesión 3"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill4, (const char*)u8"Habilidad de profesión 4"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill5, (const char*)u8"Habilidad de profesión 5"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill6, (const char*)u8"Habilidad de profesión 6"},
				{KeyBinds::KeyControl::Skills_ProfessionSkill7, (const char*)u8"Habilidad de profesión 7"},
				{KeyBinds::KeyControl::Skills_SpecialAction, (const char*)u8"Acción especial"},
				{KeyBinds::KeyControl::Targeting_AlertTarget, (const char*)u8"Alertar al objectivo"},
				{KeyBinds::KeyControl::Targeting_CallTarget, (const char*)u8"Anuncial objectivo"},
				{KeyBinds::KeyControl::Targeting_TakeTarget, (const char*)u8"Apuntar al objectivo"},
				{KeyBinds::KeyControl::Targeting_SetPersonalTarget, (const char*)u8"Esteblecer objectivo personal"},
				{KeyBinds::KeyControl::Targeting_TakePersonalTarget, (const char*)u8"Apuntaral objectivo personal"},
				{KeyBinds::KeyControl::Targeting_NearestEnemy, (const char*)u8"Enemigo más cercano"},
				{KeyBinds::KeyControl::Targeting_NextEnemy, (const char*)u8"Enemigo siguiente"},
				{KeyBinds::KeyControl::Targeting_PreviousEnemy, (const char*)u8"Enemigo anterior"},
				{KeyBinds::KeyControl::Targeting_NearestAlly, (const char*)u8"Aliado más cercano"},
				{KeyBinds::KeyControl::Targeting_NextAlly, (const char*)u8"Aliado siguiente"},
				{KeyBinds::KeyControl::Targeting_PreviousAlly, (const char*)u8"Aliado anterior"},
				{KeyBinds::KeyControl::Targeting_LockAutotarget, (const char*)u8"Bloquear objectivo atomático"},
				{KeyBinds::KeyControl::Targeting_SnapGroundTarget, (const char*)u8"Cambiar blanco de suelo"},
				{KeyBinds::KeyControl::Targeting_ToggleSnapGroundTarget, (const char*)u8"Activar o desactivar cambio de blanco de suelo"},
				{KeyBinds::KeyControl::Targeting_DisableAutotargeting, (const char*)u8"Desactivar blanco automático"},
				{KeyBinds::KeyControl::Targeting_ToggleAutotargeting, (const char*)u8"Activar o descativar blanco automático"},
				{KeyBinds::KeyControl::Targeting_AllyTargetingMode, (const char*)u8"Modo de apuntado a aliados"},
				{KeyBinds::KeyControl::Targeting_ToggleAllyTargetingMode, (const char*)u8"Cambiar modo de apuntado a aliados"},
				{KeyBinds::KeyControl::UI_BlackLionTradingDialog, (const char*)u8"Diálogo de la Compañía de Comercio del León Negro"},
				{KeyBinds::KeyControl::UI_ContactsDialog, (const char*)u8"Diálogo de contactos"},
				{KeyBinds::KeyControl::UI_GuildDialog, (const char*)u8"Diálogo de clan"},
				{KeyBinds::KeyControl::UI_HeroDialog, (const char*)u8"Diálogo de héroe"},
				{KeyBinds::KeyControl::UI_InventoryDialog, (const char*)u8"Diálogo de inventario"},
				{KeyBinds::KeyControl::UI_PetDialog, (const char*)u8"Diálogo de masotas"},
				{KeyBinds::KeyControl::UI_LogOut, (const char*)u8"Cerrar sesión"},
				{KeyBinds::KeyControl::UI_MailDialog, (const char*)u8"Diálogo de correo"},
				{KeyBinds::KeyControl::UI_OptionsDialog, (const char*)u8"Diálogo de opciones"},
				{KeyBinds::KeyControl::UI_PartyDialog, (const char*)u8"Diálogo de grupo"},
				{KeyBinds::KeyControl::UI_PvPPanel, (const char*)u8"Panel PvP"},
				{KeyBinds::KeyControl::UI_PvPBuild, (const char*)u8"Ajustes PvP"},
				{KeyBinds::KeyControl::UI_Scoreboard, (const char*)u8"Marcador de puntos"},
				{KeyBinds::KeyControl::UI_WizardsVaultDialog, (const char*)u8"Diálogo de la Cámara del Brujo"},
				{KeyBinds::KeyControl::UI_InformationDialog, (const char*)u8"Diálogo de información"},
				{KeyBinds::KeyControl::UI_Show_HideChat, (const char*)u8"Ver/Ocultar chat"},
				{KeyBinds::KeyControl::UI_ChatCommand, (const char*)u8"Comandos de chat"},
				{KeyBinds::KeyControl::UI_ChatMessage, (const char*)u8"Mensaje de chat"},
				{KeyBinds::KeyControl::UI_ChatReply, (const char*)u8"Respuesta de chat"},
				{KeyBinds::KeyControl::UI_ShowHideUI, (const char*)u8"Ver/Ocultar interfaz"},
				{KeyBinds::KeyControl::UI_ShowHideSquadBroadcastChat, (const char*)u8"Ver/Ocultar chat del escuadrón"},
				{KeyBinds::KeyControl::UI_SquadBroadcastChatCommand, (const char*)u8"Comandos de char de escuadrón"},
				{KeyBinds::KeyControl::UI_SquadBroadcastMessage, (const char*)u8"Mensaje para todo el escuadrón"},
				{KeyBinds::KeyControl::Camera_FreeCamera, (const char*)u8"Cámera libre"},
				{KeyBinds::KeyControl::Camera_ZoomIn, (const char*)u8"Acercar vista"},
				{KeyBinds::KeyControl::Camera_ZoomOut, (const char*)u8"Alejar vista"},
				{KeyBinds::KeyControl::Camera_LookBehind, (const char*)u8"Mirar detrás"},
				{KeyBinds::KeyControl::Camera_ToggleActionCamera, (const char*)u8"Activar cámera de acción"},
				{KeyBinds::KeyControl::Camera_DisableActionCamera, (const char*)u8"Desactivar cámera de acción"},
				{KeyBinds::KeyControl::Screenshot_Normal, (const char*)u8"Normal"},
				{KeyBinds::KeyControl::Screenshot_Stereoscopic, (const char*)u8"Estereoscópica"},
				{KeyBinds::KeyControl::Map_OpenClose, (const char*)u8"Abrir/Cerrar"},
				{KeyBinds::KeyControl::Map_Recenter, (const char*)u8"Centrar mapa"},
				{KeyBinds::KeyControl::Map_FloorDown, (const char*)u8"Nivel abajo"},
				{KeyBinds::KeyControl::Map_FloorUp, (const char*)u8"Nivel arribar"},
				{KeyBinds::KeyControl::Map_ZoomIn, (const char*)u8"Acercar vista"},
				{KeyBinds::KeyControl::Map_ZoomOut, (const char*)u8"Alejar vista"},
				{KeyBinds::KeyControl::Mounts_MountDismount, (const char*)u8"Montar/Desmontar"},
				{KeyBinds::KeyControl::Mounts_MountAbility1, (const char*)u8"Habilidad de montura 1"},
				{KeyBinds::KeyControl::Mounts_MountAbility2, (const char*)u8"Habilidad de montura 2"},
				{KeyBinds::KeyControl::Mounts_Raptor, (const char*)u8"Montar/Desmontar del raptor"},
				{KeyBinds::KeyControl::Mounts_Springer, (const char*)u8"Montar/Desmontar del saltarín"},
				{KeyBinds::KeyControl::Mounts_Skimmer, (const char*)u8"Montar/Desmontar de la mantarraya"},
				{KeyBinds::KeyControl::Mounts_Jackal, (const char*)u8"Montar/Desmontar del chacal"},
				{KeyBinds::KeyControl::Mounts_Griffon, (const char*)u8"Montar/Desmontar del grifo"},
				{KeyBinds::KeyControl::Mounts_RollerBeetle, (const char*)u8"Montar/Desmontar del escarabajo"},
				{KeyBinds::KeyControl::Mounts_Warclaw, (const char*)u8"Montar/Desmontar de la garrabélica"},
				{KeyBinds::KeyControl::Mounts_Skyscale, (const char*)u8"Montar/Desmontar de la escamaceleste"},
				{KeyBinds::KeyControl::Mounts_Turtle, (const char*)u8"Tortuga de combate: Montar/Desmontar"},
				{KeyBinds::KeyControl::Spectators_NearestFixedCamera, (const char*)u8"Cámera fija más cercana"},
				{KeyBinds::KeyControl::Spectators_NearestPlayer, (const char*)u8"Jugador más cercano"},
				{KeyBinds::KeyControl::Spectators_RedPlayer1, (const char*)u8"Jugador rojo 1"},
				{KeyBinds::KeyControl::Spectators_RedPlayer2, (const char*)u8"Jugador rojo 2"},
				{KeyBinds::KeyControl::Spectators_RedPlayer3, (const char*)u8"Jugador rojo 3"},
				{KeyBinds::KeyControl::Spectators_RedPlayer4, (const char*)u8"Jugador rojo 4"},
				{KeyBinds::KeyControl::Spectators_RedPlayer5, (const char*)u8"Jugador rojo 5"},
				{KeyBinds::KeyControl::Spectators_BluePlayer1, (const char*)u8"Jugador azul 1"},
				{KeyBinds::KeyControl::Spectators_BluePlayer2, (const char*)u8"Jugador azul 2"},
				{KeyBinds::KeyControl::Spectators_BluePlayer3, (const char*)u8"Jugador azul 3"},
				{KeyBinds::KeyControl::Spectators_BluePlayer4, (const char*)u8"Jugador azul 4"},
				{KeyBinds::KeyControl::Spectators_BluePlayer5, (const char*)u8"Jugador azul 5"},
				{KeyBinds::KeyControl::Spectators_FreeCamera, (const char*)u8"Cámera libre"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBoost, (const char*)u8"Cámera libre: Acelerar"},
				{KeyBinds::KeyControl::Spectators_FreeCameraForward, (const char*)u8"Cámera libre: Adelante"},
				{KeyBinds::KeyControl::Spectators_FreeCameraBackward, (const char*)u8"Cámera libre: Atrás"},
				{KeyBinds::KeyControl::Spectators_FreeCameraLeft, (const char*)u8"Cámera libre: Izquierda"},
				{KeyBinds::KeyControl::Spectators_FreeCameraRight, (const char*)u8"Cámera libre: Derecha"},
				{KeyBinds::KeyControl::Spectators_FreeCameraUp, (const char*)u8"Cámera libre: Arriba"},
				{KeyBinds::KeyControl::Spectators_FreeCameraDown, (const char*)u8"Cámera libre: Abajo"},
				{KeyBinds::KeyControl::Squad_Location_Arrow, (const char*)u8"Flecha"},
				{KeyBinds::KeyControl::Squad_Location_Circle, (const char*)u8"Círculo"},
				{KeyBinds::KeyControl::Squad_Location_Heart, (const char*)u8"Corazón"},
				{KeyBinds::KeyControl::Squad_Location_Square, (const char*)u8"Cuadrado"},
				{KeyBinds::KeyControl::Squad_Location_Star, (const char*)u8"Estrella"},
				{KeyBinds::KeyControl::Squad_Location_Spiral, (const char*)u8"Espiral"},
				{KeyBinds::KeyControl::Squad_Location_Triangle, (const char*)u8"Triángulo"},
				{KeyBinds::KeyControl::Squad_Location_X, (const char*)u8"X"},
				{KeyBinds::KeyControl::Squad_ClearAllLocationMarkers, (const char*)u8"Borrar todos los indicadores de ubicación"},
				{KeyBinds::KeyControl::Squad_Object_Arrow, (const char*)u8"Objeto Flecha"},
				{KeyBinds::KeyControl::Squad_Object_Circle, (const char*)u8"Objeto Círculo"},
				{KeyBinds::KeyControl::Squad_Object_Heart, (const char*)u8"Objeto Corazón"},
				{KeyBinds::KeyControl::Squad_Object_Square, (const char*)u8"Objeto Cuadrado"},
				{KeyBinds::KeyControl::Squad_Object_Star, (const char*)u8"Objeto Estrella"},
				{KeyBinds::KeyControl::Squad_Object_Spiral, (const char*)u8"Objeto Espiral"},
				{KeyBinds::KeyControl::Squad_Object_Triangle, (const char*)u8"Objeto Triángulo"},
				{KeyBinds::KeyControl::Squad_Object_X, (const char*)u8"Objeto X"},
				{KeyBinds::KeyControl::Squad_ClearAllObjectMarkers, (const char*)u8"Borrar todo los indicadores de objeto"},
				{KeyBinds::KeyControl::MasterySkills_ActivateMasterySkill, (const char*)u8"Activar habilidad de dominio"},
				{KeyBinds::KeyControl::MasterySkills_StartFishing, (const char*)u8"Empezar a pescar"},
				{KeyBinds::KeyControl::MasterySkills_SummonSkiff, (const char*)u8"Invocar esquife"},
				{KeyBinds::KeyControl::MasterySkills_SetJadeBotWaypoint, (const char*)u8"Establecer punto de ruta del robot de jade"},
				{KeyBinds::KeyControl::MasterySkills_ScanForRift, (const char*)u8"Escanear en busca de fisura"},
				{KeyBinds::KeyControl::MasterySkills_SkyscaleLeap, (const char*)u8"Salto sobre escamaceleste"},
				{KeyBinds::KeyControl::MasterySkills_ConjuredDoorway, (const char*)u8"Portal conjurado"},
				{KeyBinds::KeyControl::Miscellaneous_AoELoot, (const char*)u8"Saquea con AdE"},
				{KeyBinds::KeyControl::Miscellaneous_Interact, (const char*)u8"Interaccionar"},
				{KeyBinds::KeyControl::Miscellaneous_ShowEnemyNames, (const char*)u8"Monstrar enemigos"},
				{KeyBinds::KeyControl::Miscellaneous_ShowAllyNames, (const char*)u8"Monstrar aliados"},
				{KeyBinds::KeyControl::Miscellaneous_StowDrawWeapon, (const char*)u8"Guardar/Sacar armas"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleLanguage, (const char*)u8"Alternar idioma"},
				{KeyBinds::KeyControl::Miscellaneous_RangerPetCombatToggle, (const char*)u8"Activar combate de mascota de guardabosques"},
				{KeyBinds::KeyControl::Miscellaneous_ToggleFullScreen, (const char*)u8"Activar pantalla completa"},
				{KeyBinds::KeyControl::Miscellaneous_EquipUnequipNovelty, (const char*)u8"Equipar/Desequipar objeto de entretenimiunto"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateChair, (const char*)u8"Activar silla"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateMusicalInstrument, (const char*)u8"Activar instrumento musical"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateHeldItem, (const char*)u8"Activar objeto portado"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateToy, (const char*)u8"Activar juguete"},
				{KeyBinds::KeyControl::Miscellaneous_ActivateTonic, (const char*)u8"Activar tónico"},
				{KeyBinds::KeyControl::Miscellaneous_DecorateModeToggle, (const char*)u8"Modo de decoración sí/no"},
				{KeyBinds::KeyControl::Templates_BuildTemplate1, (const char*)u8"Plantilla de ajustes 1"},
				{KeyBinds::KeyControl::Templates_BuildTemplate2, (const char*)u8"Plantilla de ajustes 2"},
				{KeyBinds::KeyControl::Templates_BuildTemplate3, (const char*)u8"Plantilla de ajustes 3"},
				{KeyBinds::KeyControl::Templates_BuildTemplate4, (const char*)u8"Plantilla de ajustes 4"},
				{KeyBinds::KeyControl::Templates_BuildTemplate5, (const char*)u8"Plantilla de ajustes 5"},
				{KeyBinds::KeyControl::Templates_BuildTemplate6, (const char*)u8"Plantilla de ajustes 6"},
				{KeyBinds::KeyControl::Templates_BuildTemplate7, (const char*)u8"Plantilla de ajustes 7"},
				{KeyBinds::KeyControl::Templates_BuildTemplate8, (const char*)u8"Plantilla de ajustes 8"},
				{KeyBinds::KeyControl::Templates_BuildTemplate9, (const char*)u8"Plantilla de ajustes 9"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate1, (const char*)u8"Plantilla de equipamiento 1"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate2, (const char*)u8"Plantilla de equipamiento 2"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate3, (const char*)u8"Plantilla de equipamiento 3"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate4, (const char*)u8"Plantilla de equipamiento 4"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate5, (const char*)u8"Plantilla de equipamiento 5"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate6, (const char*)u8"Plantilla de equipamiento 6"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate7, (const char*)u8"Plantilla de equipamiento 7"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate8, (const char*)u8"Plantilla de equipamiento 8"},
				{KeyBinds::KeyControl::Templates_EquipmentTemplate9, (const char*)u8"Plantilla de equipamiento 9"},
			}
		}
	}
};

#ifndef NDEBUG
#define ANONYMOUS_ASSERT3(expr, ctr) namespace assert##ctr { struct StaticAsserter { StaticAsserter() { assert(expr); } } s; }
#define ANONYMOUS_ASSERT2(expr, ctr) ANONYMOUS_ASSERT3(expr, ctr)
#define ANONYMOUS_ASSERT(expr) ANONYMOUS_ASSERT2(expr, __COUNTER__)
#else
#define ANONYMOUS_ASSERT(expr)
#endif

ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::English).Modifier.size() == KeyBinds::MODIFIER_SIZE)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::English).Keys.size() == KeyBinds::KEY_CODES_SIZE_TRANSLATION)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::English).KeyControls.size() == KeyBinds::KEY_CONTROL_SIZE)

ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::French).Modifier.size() == KeyBinds::MODIFIER_SIZE)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::French).Keys.size() == KeyBinds::KEY_CODES_SIZE_TRANSLATION)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::French).KeyControls.size() == KeyBinds::KEY_CONTROL_SIZE)

ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::German).Modifier.size() == KeyBinds::MODIFIER_SIZE)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::German).Keys.size() == KeyBinds::KEY_CODES_SIZE_TRANSLATION)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::German).KeyControls.size() == KeyBinds::KEY_CONTROL_SIZE)

ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::Spanish).Modifier.size() == KeyBinds::MODIFIER_SIZE)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::Spanish).Keys.size() == KeyBinds::KEY_CODES_SIZE_TRANSLATION)
ANONYMOUS_ASSERT(TRANSLATIONS.at(Language::Spanish).KeyControls.size() == KeyBinds::KEY_CONTROL_SIZE)

void AddModifier(std::stringstream& pStr, KeyBinds::Modifier pMod, Language pLang)
{
	const auto& translation = TRANSLATIONS.at(pLang);

	if (pMod & KeyBinds::Modifier_Ctrl)
	{
		pStr << translation.Modifier.at(KeyBinds::Modifier_Ctrl) << " + ";
	}
	if (pMod & KeyBinds::Modifier_Alt)
	{
		pStr << translation.Modifier.at(KeyBinds::Modifier_Alt) << " + ";
	}
	if (pMod & KeyBinds::Modifier_Shift)
	{
		pStr << translation.Modifier.at(KeyBinds::Modifier_Shift) << " + ";
	}
}

std::string to_string(KeyBinds::KeyControl pKeyControl, Language pLang)
{
	if (pLang == Language::Chinese)
	{
		return "";
	}

	const auto& keyMap = TRANSLATIONS.at(pLang).KeyControls;
	if (const auto& trans = keyMap.find(pKeyControl); trans != keyMap.end())
	{
		return trans->second;
	}

	return "";
}

std::string to_string(KeyBinds::Key pKeyBind, Language pLang, HKL pKeyboardLayout, bool pNotSetText)
{
	// no chinese translation provided
	if (pLang == Language::Chinese)
	{
		return "";
	}

	const auto& translation = TRANSLATIONS.at(pLang);

	if (pKeyBind.DeviceType == KeyBinds::DeviceType::Unset)
	{
		if (pNotSetText)
		{
			return translation.NotSet;
		}
		return "";
	}

	std::stringstream res("");

	// modifier
	// Strg + Alt + Umschalt
	AddModifier(res, pKeyBind.Modifier, pLang);

	if (pKeyBind.DeviceType == KeyBinds::DeviceType::Keyboard)
	{
		res << to_string(static_cast<KeyBinds::KeyCode>(pKeyBind.Code), pLang, pKeyboardLayout);
	}
	else if (pKeyBind.DeviceType == KeyBinds::DeviceType::Mouse)
	{
		res << to_string(static_cast<KeyBinds::MouseCode>(pKeyBind.Code), pLang);
	}

	return res.str();
}

std::string to_string(KeyBinds::KeyCode pKeyCode, Language pLang, HKL pKeyboardLayout)
{
	if (pLang == Language::Chinese)
	{
		return "";
	}

	using KeyBinds::KeyCode;
	if (pKeyCode >= KeyCode::A && pKeyCode <= KeyCode::Z || pKeyCode >= KeyCode::_0 && pKeyCode <= KeyCode::_9)
	{
		UINT scanCode = KeyCodeToMsvcScanCode(pKeyCode);
		UINT keyExW = MapVirtualKeyExW(scanCode, MAPVK_VSC_TO_VK_EX, pKeyboardLayout);
		return std::string(1, static_cast<char>(keyExW));
	}
	// OEM keys (like Ä, Ö or #)
	if (pKeyCode == KeyCode::Tilde || pKeyCode == KeyCode::Minus || pKeyCode == KeyCode::Equals || pKeyCode == KeyCode::OpenBracket
		|| pKeyCode == KeyCode::CloseBracket || pKeyCode == KeyCode::Semicolon || pKeyCode == KeyCode::Quote || pKeyCode == KeyCode::Hash
		|| pKeyCode == KeyCode::Backslash || pKeyCode == KeyCode::Colon || pKeyCode == KeyCode::Period || pKeyCode == KeyCode::Slash)
	{
		UINT scanCode = KeyCodeToMsvcScanCode(pKeyCode);
		UINT keyExW = MapVirtualKeyExW(scanCode, MAPVK_VSC_TO_VK_EX, pKeyboardLayout);
		wchar_t shortCutRealNameWstr[32];
		constexpr byte keyState[256]{};
		int toUnicodeCount = ToUnicodeEx(keyExW, scanCode, keyState, shortCutRealNameWstr, 32, 1 << 2, pKeyboardLayout);
		if (toUnicodeCount == 2) {
	        shortCutRealNameWstr[1] = '\0';
	    }

		int count = WideCharToMultiByte(CP_UTF8, 0, shortCutRealNameWstr, sizeof(shortCutRealNameWstr), NULL, 0, NULL, NULL);
	    std::string str(count, 0);
	    WideCharToMultiByte(CP_UTF8, 0, shortCutRealNameWstr, -1, &str[0], count, NULL, NULL);
		return str;
	}

	// translated by hand!
	const auto& keysMap = TRANSLATIONS.at(pLang).Keys;
	if (const auto& trans = keysMap.find(pKeyCode); trans != keysMap.end())
	{
		return trans->second;
	}

	return "";
}

std::string to_string(KeyBinds::MouseCode pMouseCode, Language pLang)
{
	if (pLang == Language::Chinese)
	{
		return "";
	}

	using KeyBinds::MouseCode;
	int32_t key = static_cast<int32_t>(pMouseCode);
	std::stringstream res("");
	const auto& translation = TRANSLATIONS.at(pLang);
	res << translation.Mouse;
	if (pMouseCode == MouseCode::Mouse_2)
	{
		res << key;
	}
	else if (pMouseCode == MouseCode::Mouse_3)
	{
		res << 3;
	}
	else
	{
		res << key + 1;
	}

	return res.str();
}

std::string to_string_unbind(Language pLang) {
	return TRANSLATIONS.at(pLang).Unbind;
}
